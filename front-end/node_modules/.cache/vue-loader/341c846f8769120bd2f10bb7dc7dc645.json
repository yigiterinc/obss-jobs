{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/Applications.vue?vue&type=style&index=1&id=58c6efd3&scoped=true&lang=scss&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/Applications.vue","mtime":1562852047526},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../styles/abstracts/typography.scss\";\n\n* {\n    @include set_font_opensans\n}\n\n.title {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    text-align: center;\n}\n\n.search {\n    width: 40vw;\n}\n\n.multiselect {\n    margin-left: 10px;\n    width: 10vw;\n}\n\ntable.dataTable thead .sorting:after,\ntable.dataTable thead .sorting:before,\ntable.dataTable thead .sorting_asc:after,\ntable.dataTable thead .sorting_asc:before,\ntable.dataTable thead .sorting_asc_disabled:after,\ntable.dataTable thead .sorting_asc_disabled:before,\ntable.dataTable thead .sorting_desc:after,\ntable.dataTable thead .sorting_desc:before,\ntable.dataTable thead .sorting_desc_disabled:after,\ntable.dataTable thead .sorting_desc_disabled:before {\n    bottom: .5em;\n}\n\ntfoot {\n    display: none !important;\n}\n\n.search-form {\n    margin-bottom: 2rem;\n}\n\n.information {\n    margin-bottom: 3rem;\n    font-size: 17px;\n}\n",{"version":3,"sources":["Applications.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Applications.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <h1 class=\"title\">Applications</h1>\n        <p class=\"information\">You can search for a skill by using the search bar. Use the dropdown to filter by application status\n        and click the arrow button to sort by candidate compatibility. Proceed status button takes the application to\n        the next status (Awaiting -> Under review -> Interview -> Job Offer -> Accepted) </p>\n        <label for=\"search\">Search for a skill</label>\n\n        <form class=\"form-inline search-form\">\n            <div class=\"form-group \">\n                <input type=\"text\" class=\"form-control search\" id=\"search\"\n                       placeholder=\"Search\" v-model=\"searchedWord\" required>\n            </div>\n            <multiselect v-model=\"statusFilter\" :options=\"options\" class=\"multiselect\"></multiselect>\n        </form>\n        <mdb-datatable\n                :data=\"tableData\"\n                :searching=\"false\"\n                :pagination=\"false\"\n                striped\n                bordered/>\n    </div>\n</div>\n</template>\n\n<script>\n    import Navbar from \"./Nav\"\n    import Multiselect from 'vue-multiselect'\n    import {mdbDatatable} from 'mdbvue';\n\n    import ServicesMixin from \"./mixins/services-mixin\";\n\n    import 'bootstrap-css-only/css/bootstrap.min.css';\n    import 'mdbvue/build/css/mdb.css';\n\n    export default {\n        name: \"Applications\",\n        mixins: [ServicesMixin],\n        components: {\n            Navbar,\n            Multiselect,\n            mdbDatatable\n        },\n        data () {\n            return {\n                statusFilter: null,\n                searchedWord: '',\n                jobRequirements: [],\n                options: ['Awaiting', 'Under review', 'Interview', 'Job Offer', 'Accepted'],\n                tableData: {\n                    columns: [\n                        {\n                            label: 'Name',\n                            field: 'name',\n                            sort: 'asc',\n                        },\n                        {\n                            label: 'Date',\n                            field: 'date',\n                            sort: 'asc'\n                        },\n                        {\n                            label: 'Compatibility',\n                            field: 'compatibility',\n                            sort: 'asc'\n                        },\n                        {\n                            label: 'Status',\n                            field: 'status',\n                            sort: 'asc'\n                        },\n                        {\n                            label: 'Proceed Application Status',\n                            field: 'changeStatus',\n                        }\n                    ],\n                        rows: []\n                }\n            }\n        },\n        methods: {\n            getJobId: function() {\n                const url = window.location.pathname;\n                // return the first url param\n                return url.split(\"/\")[2];\n            },\n            getApplications() {\n                const jobId = this.getJobId();\n                this.getApplicationsForJobPost(jobId).then(response => {\n                    console.log(response);\n                    this.fillTable(response);\n                })\n            },\n            fillTable(applications) {\n                var thisObj = this;\n                let statusButtonId = 0;\n\n                applications.forEach(application => {\n                    this.tableData.rows.push({\n                        name: application.candidate.fullName,\n                        date: this.parseDateFromDateObject(application.applicationDate),\n                        compatibility: this.calculateJobCompatibility(application.candidate.linkedIn.linkedInSkillSet),\n                        status: application.applicationStatus,\n                        changeStatus: '<button type=\"button\" class=\"btn-indigo btn-sm m-0 status-button\" style=\"margin-left: 1rem\"' +\n                            ' onclick=\"thisObj.proceedApplicationStatus(status)\">' +\n                            'Proceed Status</button>',\n                        candidateSkillSet: application.candidate.linkedIn.linkedInSkillSet\n                    });\n\n                    statusButtonId++;\n                });\n            },\n            parseDateFromDateObject (date) {\n                let dateWithoutTime = date.split(\"T\")[0];\n                let split = dateWithoutTime.split(\"-\");\n\n                const day = split[0];\n                const month = split[1];\n                const year = split[2];\n\n                return year + '.' + month + '.' + day\n            },\n            calculateJobCompatibility (skillSet) {\n                let score = 0;\n\n                this.jobRequirements.forEach(requirement => {\n                    const wordsInRequirement = requirement.split(\" \");\n                    wordsInRequirement.forEach(word => {\n                        skillSet.forEach(skillObject => {\n                            if (skillObject.skill.toString().toLowerCase() === word.toLowerCase()) {\n                                score++;\n                            }\n                        })\n                    });\n                });\n\n                const numberOfRequirements = this.jobRequirements.length;\n                return Math.floor((score / numberOfRequirements) * 100) + \"%\";\n            },\n            proceedApplicationStatus (status) {\n                console.log(status)\n            }\n        },\n        mounted() {\n            this.getJobRequirements(this.getJobId()).then(jobRequirements => {\n                jobRequirements.forEach(jobRequirementsDto => {\n                    this.jobRequirements.push(jobRequirementsDto.requirement)\n                })\n            });\n\n            this.getApplications();\n        }\n    }\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style scoped lang=\"scss\">\n    @import \"../styles/abstracts/typography.scss\";\n\n    * {\n        @include set_font_opensans\n    }\n\n    .title {\n        margin-top: 2rem;\n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    .search {\n        width: 40vw;\n    }\n\n    .multiselect {\n        margin-left: 10px;\n        width: 10vw;\n    }\n\n    table.dataTable thead .sorting:after,\n    table.dataTable thead .sorting:before,\n    table.dataTable thead .sorting_asc:after,\n    table.dataTable thead .sorting_asc:before,\n    table.dataTable thead .sorting_asc_disabled:after,\n    table.dataTable thead .sorting_asc_disabled:before,\n    table.dataTable thead .sorting_desc:after,\n    table.dataTable thead .sorting_desc:before,\n    table.dataTable thead .sorting_desc_disabled:after,\n    table.dataTable thead .sorting_desc_disabled:before {\n        bottom: .5em;\n    }\n\n    tfoot {\n        display: none !important;\n    }\n\n    .search-form {\n        margin-bottom: 2rem;\n    }\n\n    .information {\n        margin-bottom: 3rem;\n        font-size: 17px;\n    }\n</style>\n\n"]}]}
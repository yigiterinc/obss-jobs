{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/ToastNotification.vue?vue&type=style&index=0&id=59cd53b4&scoped=true&lang=css&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/ToastNotification.vue","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.toast {\n  opacity: 1;\n}\n.text-muted {\n  padding-left: 10px;\n}\n",{"version":3,"sources":["ToastNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA","file":"ToastNotification.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\r\n  <transition enter-active-class=\"animated fadeIn\" leave-active-class=\"animated \">\r\n    <div v-if=\"showing\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n      <div class=\"toast-header\">\r\n        <mdb-icon class=\"mr-2\" :icon=\"icon\" :color=\"iconColor\" :size=\"iconSize\"></mdb-icon>\r\n        <strong class=\"mr-auto\">{{title}}</strong>\r\n        <small v-if=\"time\" class=\"text-muted\">{{calculatedTime}}</small>\r\n        <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" @click=\"closeToast\"><mdb-icon size=\"xs\" icon=\"times\"/></button>\r\n      </div>\r\n      <div class=\"toast-body\">\r\n        {{message}}\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n\r\n<script>\r\nimport mdbBtn from '../Components/Button';\r\nimport mdbIcon from '../Content/Fa';\r\nconst ToastNotification = {\r\n  name: 'Notification',\r\n  components: {\r\n    mdbBtn,\r\n    mdbIcon\r\n  },\r\n  props: {\r\n    time: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    show: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    message: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"square\"\r\n    },\r\n    iconSize: {\r\n      type: String,\r\n      default: 'lg'\r\n    },\r\n    iconColor: {\r\n      type: String,\r\n      default: 'primary'\r\n    },\r\n    received: Date\r\n  },\r\n  data(){\r\n    return {\r\n      currentTime: '',\r\n      startTime: '',\r\n      showNotification: this.show\r\n    };\r\n  },\r\n  computed: {\r\n    showing: {\r\n      get() {\r\n        return this.showNotification;\r\n      },\r\n      set(newVal) {\r\n        this.showNotification = newVal;\r\n      }\r\n    },\r\n    calculatedTime(){\r\n      let time = (this.currentTime - this.startTime)/1000;\r\n      return this.formatTime(time);\r\n    }\r\n  },\r\n  methods: {\r\n    updateTime(){\r\n      this.currentTime = new Date().getTime();\r\n    },\r\n    formatTime(time){\r\n      switch (true) {\r\n        case (time === 0):\r\n          return `now`;\r\n        case (time < 60):\r\n          let second = Math.floor(time);\r\n          return `${second} seconds ago`;\r\n        case (time < 120):\r\n          return `1 minute ago`;\r\n        case (time < 3600):\r\n          let minutes = Math.floor(time/60);\r\n          return `${minutes} minutes ago`;\r\n        case (time === 3600):\r\n          return `1 hour ago`;\r\n        case (time > 3600 && time < 86400):\r\n          let hours = Math.floor(time/3600);\r\n          return `${hours} hours ago`;\r\n        case (time === 86400):\r\n          return `a day ago`;\r\n        case (time > 86400):\r\n          let days = Math.floor(time/86400);\r\n          return `${days} days ago`;\r\n      }\r\n    },\r\n    closeToast(){\r\n      this.showing = false;\r\n    },\r\n  },\r\n  mounted(){\r\n    let timeReceived = this.received || new Date();\r\n    this.startTime = timeReceived.getTime();\r\n    this.currentTime = new Date().getTime();\r\n    window.setInterval(this.updateTime, 60000);\r\n  },\r\n  beforeDestroy(){\r\n    window.clearInterval(this.updateTime);\r\n  }\r\n};\r\n\r\nexport default ToastNotification;\r\nexport { ToastNotification as mdbToastNotification };\r\n</script>\r\n<style scoped>\r\n  .toast {\r\n    opacity: 1;\r\n  }\r\n  .text-muted {\r\n    padding-left: 10px;\r\n  }\r\n</style>\r\n"]}]}
{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/Collapse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/Collapse.vue","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport classNames from 'classnames';\r\n\r\nconst Collapse = {\r\n  props: {\r\n    toggleTag: {\r\n      type: [String, Array],\r\n      default: () => ['button']\r\n    },\r\n    toggleClass: {\r\n      type: [String, Array],\r\n      default: () => ['btn btn-primary']\r\n    },\r\n    togglers: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    toggleText: {\r\n      type: [String, Array],\r\n      default: () => ['Toggle']\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      collapse: true,\r\n      height: 0\r\n    };\r\n  },\r\n  mounted() {\r\n    this.height = this.$refs.collapseContent.clientHeight;\r\n    this.collapse = false;\r\n  },\r\n  methods: {\r\n    beforeEnter(el) {\r\n      el.style.height = '0';\r\n    },\r\n    enter(el) {\r\n      el.style.height = el.scrollHeight + 'px';\r\n    },\r\n    beforeLeave(el) {\r\n      el.style.height = el.scrollHeight + 'px';\r\n    },\r\n    leave(el) {\r\n      el.style.height = '0';\r\n    }\r\n  },\r\n  computed: {\r\n    btnClass() {\r\n      return classNames(\r\n        this.toggleClass\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Collapse;\r\nexport { Collapse as mdbCollapse };\r\n",{"version":3,"sources":["Collapse.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Collapse.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\r\n  <div>\r\n    <component v-for=\"(toggler, index) in togglers\" :key=\"index\" :is=\"toggleTag[index]\" :class=\"btnClass\" @click.prevent=\"collapse = !collapse\">{{toggleText[index]}}</component>\r\n    <transition @before-enter=\"beforeEnter\" @enter=\"enter\" @before-leave=\"beforeLeave\" @leave=\"leave\">\r\n      <div ref=\"collapseContent\" v-if=\"collapse\" class=\"collapse show collapse-item\">\r\n        <slot></slot>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport classNames from 'classnames';\r\n\r\nconst Collapse = {\r\n  props: {\r\n    toggleTag: {\r\n      type: [String, Array],\r\n      default: () => ['button']\r\n    },\r\n    toggleClass: {\r\n      type: [String, Array],\r\n      default: () => ['btn btn-primary']\r\n    },\r\n    togglers: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    toggleText: {\r\n      type: [String, Array],\r\n      default: () => ['Toggle']\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      collapse: true,\r\n      height: 0\r\n    };\r\n  },\r\n  mounted() {\r\n    this.height = this.$refs.collapseContent.clientHeight;\r\n    this.collapse = false;\r\n  },\r\n  methods: {\r\n    beforeEnter(el) {\r\n      el.style.height = '0';\r\n    },\r\n    enter(el) {\r\n      el.style.height = el.scrollHeight + 'px';\r\n    },\r\n    beforeLeave(el) {\r\n      el.style.height = el.scrollHeight + 'px';\r\n    },\r\n    leave(el) {\r\n      el.style.height = '0';\r\n    }\r\n  },\r\n  computed: {\r\n    btnClass() {\r\n      return classNames(\r\n        this.toggleClass\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Collapse;\r\nexport { Collapse as mdbCollapse };\r\n</script>\r\n\r\n<style scoped>\r\n.collapse-item {\r\n  overflow: hidden;\r\n  padding: 0;\r\n  transition: height 0.3s;\r\n}\r\n</style>\r\n"]}]}
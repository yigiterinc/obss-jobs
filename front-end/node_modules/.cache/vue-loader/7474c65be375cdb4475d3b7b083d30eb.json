{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/Popover.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/Popover.vue","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Popper from 'popper.js';\n\nconst on = function(element, event, handler) {\n  if (element && event && handler) {\n    document.addEventListener ? element.addEventListener(event, handler, false) :\n      element.attachEvent('on' + event, handler);\n  }\n};\n\nconst off = function(element, event, handler) {\n  if (element && event) {\n    document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\n  }\n};\n\nconst Popover = {\n  props: {\n    trigger: {\n      type: String,\n      default: 'click',\n      validator: value => ['click', 'hover'].indexOf(value) > -1\n    },\n    delayOnMouseOut: {\n      type: Number,\n      default: 10,\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    enterActiveClass: String,\n    leaveActiveClass: String,\n    boundariesSelector: String,\n    reference: {},\n    forceShow: {\n      type: Boolean,\n      default: false\n    },\n    appendToBody: {\n      type: Boolean,\n      default: false\n    },\n    visibleArrow: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n  },\n\n  data() {\n    return {\n      referenceElm: null,\n      popperJS: null,\n      showPopper: false,\n      currentPlacement: '',\n      popperOptions: {\n        placement: 'bottom',\n        gpuAcceleration: false\n      }\n    };\n  },\n\n  watch: {\n    showPopper(value) {\n      if (value) {\n        this.$emit('show');\n        this.updatePopper();\n      } else {\n        this.$emit('hide');\n      }\n    },\n\n    forceShow: {\n      handler(value) {\n        this[value ? 'doShow' : 'doClose']();\n      },\n      immediate: true\n    }\n  },\n\n  created() {\n    this.appendedArrow = false;\n    this.appendedToBody = false;\n    this.popperOptions = Object.assign(this.popperOptions, this.options);\n  },\n\n  mounted() {\n    this.referenceElm = this.reference || this.$slots.reference[0].elm;\n    this.popover = this.$refs.popover || this.$slots.default[0].elm;\n\n    switch (this.trigger) {\n      case 'click':\n        on(this.referenceElm, 'click', this.doToggle);\n        on(document, 'click', this.handleDocumentClick);\n        break;\n      case 'hover':\n        on(this.referenceElm, 'mouseover', this.onMouseOver);\n        on(this.popover, 'mouseover', this.onMouseOver);\n        on(this.referenceElm, 'mouseout', this.onMouseOut);\n        on(this.popover, 'mouseout', this.onMouseOut);\n        break;\n    }\n  },\n\n  methods: {\n    doToggle() {\n      if (!this.forceShow) {\n        this.showPopper = !this.showPopper;\n      }\n    },\n\n    doShow() {\n      this.showPopper = true;\n    },\n\n    doClose() {\n      this.showPopper = false;\n    },\n\n    doDestroy() {\n      if (this.showPopper) {\n        return;\n      }\n\n      if (this.popperJS) {\n        this.popperJS.destroy();\n        this.popperJS = null;\n      }\n\n      if (this.appendedToBody) {\n        this.appendedToBody = false;\n        document.body.removeChild(this.popover.parentElement);\n      }\n    },\n\n    createPopper() {\n      this.$nextTick(() => {\n        if (this.visibleArrow) {\n          this.appendArrow(this.popover);\n        }\n\n        if (this.appendToBody && !this.appendedToBody) {\n          this.appendedToBody = true;\n          document.body.appendChild(this.popover.parentElement);\n        }\n\n        if (this.popperJS && this.popperJS.destroy) {\n          this.popperJS.destroy();\n        }\n\n        if (this.boundariesSelector) {\n          const boundariesElement = document.querySelector(this.boundariesSelector);\n\n          if (boundariesElement) {\n            this.popperOptions.modifiers = Object.assign({}, this.popperOptions.modifiers);\n            this.popperOptions.modifiers.preventOverflow = Object.assign({}, this.popperOptions.modifiers.preventOverflow);\n            this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\n          }\n        }\n\n        this.popperOptions.onCreate = () => {\n          this.$emit('created', this);\n          this.$nextTick(this.updatePopper);\n        };\n\n        this.popperJS = new Popper(this.referenceElm, this.popover, this.popperOptions);\n      });\n    },\n\n    destroyPopper() {\n      off(this.referenceElm, 'click', this.doToggle);\n      off(this.referenceElm, 'mouseup', this.doClose);\n      off(this.referenceElm, 'mousedown', this.doShow);\n      off(this.referenceElm, 'focus', this.doShow);\n      off(this.referenceElm, 'blur', this.doClose);\n      off(this.referenceElm, 'mouseout', this.onMouseOut);\n      off(this.referenceElm, 'mouseover', this.onMouseOver);\n      off(document, 'click', this.handleDocumentClick);\n\n      this.showPopper = false;\n      this.doDestroy();\n    },\n\n    appendArrow(element) {\n      if (this.appendedArrow) {\n        return;\n      }\n\n      this.appendedArrow = true;\n\n      const arrow = document.createElement('div');\n      arrow.setAttribute('x-arrow', '');\n      arrow.className = 'popover_arrow';\n      element.appendChild(arrow);\n    },\n\n    updatePopper() {\n      this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\n    },\n\n    onMouseOver() {\n      this.showPopper = true;\n      clearTimeout(this._timer);\n    },\n\n    onMouseOut() {\n      this._timer = setTimeout(() => {\n        this.showPopper = false;\n      }, this.delayOnMouseOut);\n    },\n\n    handleDocumentClick(e) {\n      if (!this.$el || !this.referenceElm ||\n        this.$el.contains(e.target) ||\n        this.referenceElm.contains(e.target) ||\n        !this.popover || this.popover.contains(e.target)\n      ) {\n        return;\n      }\n\n      this.$emit('documentClick');\n\n      if (this.forceShow) {\n        return;\n      }\n\n      this.showPopper = false;\n    }\n  },\n\n  destroyed() {\n    this.destroyPopper();\n  }\n};\n\nexport default Popover;\nexport { Popover as mdbPopover };\n",{"version":3,"sources":["Popover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"Popover.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\r\n  <span>\r\n    <transition @after-leave=\"doDestroy\">\r\n      <span ref=\"popper\" :class=\"{show:!disabled && showPopper}\">\r\n        <div class=\"popover\" v-if=\"$slots.header || $slots.body\" ref=\"popover\">\r\n          <div class=\"popover-header\" v-if=\"$slots.header\">\r\n            <slot name=\"header\"></slot>\r\n          </div>\r\n          <div class=\"popover-body\" v-if=\"$slots.body\">\r\n            <slot name=\"body\"></slot>\r\n          </div>\r\n        </div>\r\n        <slot></slot>\r\n      </span>\r\n    </transition>\r\n    <slot name=\"reference\"></slot>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\n  import Popper from 'popper.js';\r\n\r\n  const on = function(element, event, handler) {\r\n    if (element && event && handler) {\r\n      document.addEventListener ? element.addEventListener(event, handler, false) :\r\n        element.attachEvent('on' + event, handler);\r\n    }\r\n  };\r\n\r\n  const off = function(element, event, handler) {\r\n    if (element && event) {\r\n      document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\r\n    }\r\n  };\r\n\r\n  const Popover = {\r\n    props: {\r\n      trigger: {\r\n        type: String,\r\n        default: 'click',\r\n        validator: value => ['click', 'hover'].indexOf(value) > -1\r\n      },\r\n      delayOnMouseOut: {\r\n        type: Number,\r\n        default: 10,\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      enterActiveClass: String,\r\n      leaveActiveClass: String,\r\n      boundariesSelector: String,\r\n      reference: {},\r\n      forceShow: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      appendToBody: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      visibleArrow: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      transition: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      options: {\r\n        type: Object,\r\n        default() {\r\n          return {};\r\n        }\r\n      },\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        referenceElm: null,\r\n        popperJS: null,\r\n        showPopper: false,\r\n        currentPlacement: '',\r\n        popperOptions: {\r\n          placement: 'bottom',\r\n          gpuAcceleration: false\r\n        }\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      showPopper(value) {\r\n        if (value) {\r\n          this.$emit('show');\r\n          this.updatePopper();\r\n        } else {\r\n          this.$emit('hide');\r\n        }\r\n      },\r\n\r\n      forceShow: {\r\n        handler(value) {\r\n          this[value ? 'doShow' : 'doClose']();\r\n        },\r\n        immediate: true\r\n      }\r\n    },\r\n\r\n    created() {\r\n      this.appendedArrow = false;\r\n      this.appendedToBody = false;\r\n      this.popperOptions = Object.assign(this.popperOptions, this.options);\r\n    },\r\n\r\n    mounted() {\r\n      this.referenceElm = this.reference || this.$slots.reference[0].elm;\r\n      this.popover = this.$refs.popover || this.$slots.default[0].elm;\r\n\r\n      switch (this.trigger) {\r\n        case 'click':\r\n          on(this.referenceElm, 'click', this.doToggle);\r\n          on(document, 'click', this.handleDocumentClick);\r\n          break;\r\n        case 'hover':\r\n          on(this.referenceElm, 'mouseover', this.onMouseOver);\r\n          on(this.popover, 'mouseover', this.onMouseOver);\r\n          on(this.referenceElm, 'mouseout', this.onMouseOut);\r\n          on(this.popover, 'mouseout', this.onMouseOut);\r\n          break;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      doToggle() {\r\n        if (!this.forceShow) {\r\n          this.showPopper = !this.showPopper;\r\n        }\r\n      },\r\n\r\n      doShow() {\r\n        this.showPopper = true;\r\n      },\r\n\r\n      doClose() {\r\n        this.showPopper = false;\r\n      },\r\n\r\n      doDestroy() {\r\n        if (this.showPopper) {\r\n          return;\r\n        }\r\n\r\n        if (this.popperJS) {\r\n          this.popperJS.destroy();\r\n          this.popperJS = null;\r\n        }\r\n\r\n        if (this.appendedToBody) {\r\n          this.appendedToBody = false;\r\n          document.body.removeChild(this.popover.parentElement);\r\n        }\r\n      },\r\n\r\n      createPopper() {\r\n        this.$nextTick(() => {\r\n          if (this.visibleArrow) {\r\n            this.appendArrow(this.popover);\r\n          }\r\n\r\n          if (this.appendToBody && !this.appendedToBody) {\r\n            this.appendedToBody = true;\r\n            document.body.appendChild(this.popover.parentElement);\r\n          }\r\n\r\n          if (this.popperJS && this.popperJS.destroy) {\r\n            this.popperJS.destroy();\r\n          }\r\n\r\n          if (this.boundariesSelector) {\r\n            const boundariesElement = document.querySelector(this.boundariesSelector);\r\n\r\n            if (boundariesElement) {\r\n              this.popperOptions.modifiers = Object.assign({}, this.popperOptions.modifiers);\r\n              this.popperOptions.modifiers.preventOverflow = Object.assign({}, this.popperOptions.modifiers.preventOverflow);\r\n              this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\r\n            }\r\n          }\r\n\r\n          this.popperOptions.onCreate = () => {\r\n            this.$emit('created', this);\r\n            this.$nextTick(this.updatePopper);\r\n          };\r\n\r\n          this.popperJS = new Popper(this.referenceElm, this.popover, this.popperOptions);\r\n        });\r\n      },\r\n\r\n      destroyPopper() {\r\n        off(this.referenceElm, 'click', this.doToggle);\r\n        off(this.referenceElm, 'mouseup', this.doClose);\r\n        off(this.referenceElm, 'mousedown', this.doShow);\r\n        off(this.referenceElm, 'focus', this.doShow);\r\n        off(this.referenceElm, 'blur', this.doClose);\r\n        off(this.referenceElm, 'mouseout', this.onMouseOut);\r\n        off(this.referenceElm, 'mouseover', this.onMouseOver);\r\n        off(document, 'click', this.handleDocumentClick);\r\n\r\n        this.showPopper = false;\r\n        this.doDestroy();\r\n      },\r\n\r\n      appendArrow(element) {\r\n        if (this.appendedArrow) {\r\n          return;\r\n        }\r\n\r\n        this.appendedArrow = true;\r\n\r\n        const arrow = document.createElement('div');\r\n        arrow.setAttribute('x-arrow', '');\r\n        arrow.className = 'popover_arrow';\r\n        element.appendChild(arrow);\r\n      },\r\n\r\n      updatePopper() {\r\n        this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\r\n      },\r\n\r\n      onMouseOver() {\r\n        this.showPopper = true;\r\n        clearTimeout(this._timer);\r\n      },\r\n\r\n      onMouseOut() {\r\n        this._timer = setTimeout(() => {\r\n          this.showPopper = false;\r\n        }, this.delayOnMouseOut);\r\n      },\r\n\r\n      handleDocumentClick(e) {\r\n        if (!this.$el || !this.referenceElm ||\r\n          this.$el.contains(e.target) ||\r\n          this.referenceElm.contains(e.target) ||\r\n          !this.popover || this.popover.contains(e.target)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        this.$emit('documentClick');\r\n\r\n        if (this.forceShow) {\r\n          return;\r\n        }\r\n\r\n        this.showPopper = false;\r\n      }\r\n    },\r\n\r\n    destroyed() {\r\n      this.destroyPopper();\r\n    }\r\n  };\r\n\r\n  export default Popover;\r\n  export { Popover as mdbPopover };\r\n</script>\r\n\r\n<style>\r\n  .popover {\r\n    width: auto;\r\n    background-color: white;\r\n    color: #97999b;\r\n    text-align: center;\r\n    display: inline-block;\r\n    border-radius: 3px;\r\n    position: absolute;\r\n    font-size: 0.83em;\r\n    font-weight: normal;\r\n    border: 1px rgb(0, 0, 0) solid;\r\n    z-index: 200000;\r\n    max-width: 276px;\r\n    text-align: start;\r\n    background-color: #fff;\r\n    border: 1px solid rgba(0, 0, 0, .2);\r\n    border-radius: .3rem;\r\n    opacity: 0;\r\n    transition: opacity 0.3s, visibility 0.3s;\r\n    visibility: hidden;\r\n  }\r\n\r\n  .show .popover {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n\r\n  .popover-body {\r\n    color: #6c6e71;\r\n  }\r\n\r\n  .popover .popover_arrow {\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    position: absolute;\r\n    margin: 5px;\r\n    color: transparent;\r\n  }\r\n\r\n  .popover[x-placement^=\"top\"] {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  .popover[x-placement^=\"top\"] .popover_arrow {\r\n    border-width: 15px 15px 0 15px;\r\n    border-color: #d6d6d6 transparent transparent transparent;\r\n    bottom: -15px;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .popover[x-placement^=\"top\"] .popover_arrow::before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: -15px;\r\n    bottom: 1.5px;\r\n    border: solid;\r\n    border-width: 15px 15px 0 15px;\r\n    border-color: white transparent transparent transparent;\r\n  }\r\n\r\n  .popover[x-placement^=\"bottom\"] {\r\n    margin-top: 18px;\r\n  }\r\n\r\n  .popover[x-placement^=\"bottom\"] .popover_arrow {\r\n    border-width: 0 15px 15px 15px;\r\n    border-color: transparent transparent #d6d6d6 transparent;\r\n    top: -15px;\r\n    margin-top: 0;\r\n  }\r\n\r\n  .popover[x-placement^=\"bottom\"] .popover_arrow::before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: -15px;\r\n    top: 1.45px;\r\n    border: solid;\r\n    border-width: 0 15px 15px 15px;\r\n    border-color: transparent transparent white transparent;\r\n  }\r\n\r\n  .popover[x-placement^=\"right\"] {\r\n    margin-left: 18px;\r\n  }\r\n\r\n  .popover[x-placement^=\"right\"] .popover_arrow {\r\n    border-width: 15px 15px 15px 0;\r\n    border-color: transparent #d6d6d6 transparent transparent;\r\n    left: -15px;\r\n    margin-left: 0;\r\n  }\r\n\r\n  .popover[x-placement^=\"right\"] .popover_arrow::before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: -15px;\r\n    left: 1.45px;\r\n    border: solid;\r\n    border-width: 15px 15px 15px 0;\r\n    border-color: transparent white transparent transparent;\r\n  }\r\n\r\n  .popover[x-placement^=\"left\"] {\r\n    margin-right: 18px;\r\n  }\r\n\r\n  .popover[x-placement^=\"left\"] .popover_arrow {\r\n    border-width: 15px 0 15px 15px;\r\n    border-color: transparent transparent transparent #d6d6d6;\r\n    right: -15px;\r\n    margin-right: 0;\r\n  }\r\n\r\n  .popover[x-placement^=\"left\"] .popover_arrow::before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: -15px;\r\n    right: 1.45px;\r\n    border: solid;\r\n    border-width: 15px 0 15px 15px;\r\n    border-color: transparent transparent transparent white;\r\n  }\r\n</style>\r\n"]}]}
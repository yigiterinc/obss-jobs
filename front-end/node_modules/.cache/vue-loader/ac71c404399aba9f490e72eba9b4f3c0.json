{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/GoogleMap.vue","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\r\nconst GoogleMap = {\r\n  name: 'google-map',\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      default: 'default'\r\n    },\r\n    markerCoordinates: {\r\n      type: Array\r\n    },\r\n    zoom: {\r\n      type: Number,\r\n      default: 14\r\n    },\r\n    modal: {\r\n      type: Boolean\r\n    },\r\n    styles: {\r\n      type: Array\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'roadmap'\r\n    },\r\n    wrapperStyle: {\r\n      type: [Array, String, Object],\r\n    },\r\n    wrapperClass: {\r\n      type: [Array, String, Object],\r\n    },\r\n    manualInit: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      mapName: this.name + \"-map\",\r\n      map: null,\r\n      bounds: null,\r\n      markers: []\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.manualInit) return;\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    retrigger() {\r\n      google.maps.event.trigger(this.map, 'resize');\r\n    },\r\n    initMap() {\r\n      this.bounds = new google.maps.LatLngBounds();\r\n      const mapCentre = this.markerCoordinates[0];\r\n\r\n      const element = document.getElementById(this.mapName);\r\n      const options = {\r\n        center: new google.maps.LatLng(mapCentre.latitude, mapCentre.longitude),\r\n        zoom: this.zoom ? this.zoom: 15,\r\n        styles: this.styles,\r\n        mapTypeId: this.type\r\n      };\r\n      this.map = new google.maps.Map(element, options);\r\n      this.markerCoordinates.forEach(coord => {\r\n        const position = new google.maps.LatLng(coord.latitude, coord.longitude);\r\n        const marker = new google.maps.Marker({\r\n          position,\r\n          map: this.map,\r\n          title: coord.title\r\n        });\r\n        this.markers.push(marker);\r\n        if (this.zoom) {return;}\r\n        this.map.fitBounds(this.bounds.extend(position));\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    modal() {\r\n      this.retrigger();\r\n    }\r\n  }\r\n};\r\n\r\nexport default GoogleMap;\r\nexport { GoogleMap as mdbGoogleMap };\r\n",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"GoogleMap.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\r\n  <div class=\"google-map\" :style=\"wrapperStyle\" :class=\"wrapperClass\" :id=\"mapName\"></div>\r\n</template>\r\n<script>\r\nconst GoogleMap = {\r\n  name: 'google-map',\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      default: 'default'\r\n    },\r\n    markerCoordinates: {\r\n      type: Array\r\n    },\r\n    zoom: {\r\n      type: Number,\r\n      default: 14\r\n    },\r\n    modal: {\r\n      type: Boolean\r\n    },\r\n    styles: {\r\n      type: Array\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'roadmap'\r\n    },\r\n    wrapperStyle: {\r\n      type: [Array, String, Object],\r\n    },\r\n    wrapperClass: {\r\n      type: [Array, String, Object],\r\n    },\r\n    manualInit: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      mapName: this.name + \"-map\",\r\n      map: null,\r\n      bounds: null,\r\n      markers: []\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.manualInit) return;\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    retrigger() {\r\n      google.maps.event.trigger(this.map, 'resize');\r\n    },\r\n    initMap() {\r\n      this.bounds = new google.maps.LatLngBounds();\r\n      const mapCentre = this.markerCoordinates[0];\r\n\r\n      const element = document.getElementById(this.mapName);\r\n      const options = {\r\n        center: new google.maps.LatLng(mapCentre.latitude, mapCentre.longitude),\r\n        zoom: this.zoom ? this.zoom: 15,\r\n        styles: this.styles,\r\n        mapTypeId: this.type\r\n      };\r\n      this.map = new google.maps.Map(element, options);\r\n      this.markerCoordinates.forEach(coord => {\r\n        const position = new google.maps.LatLng(coord.latitude, coord.longitude);\r\n        const marker = new google.maps.Marker({\r\n          position,\r\n          map: this.map,\r\n          title: coord.title\r\n        });\r\n        this.markers.push(marker);\r\n        if (this.zoom) {return;}\r\n        this.map.fitBounds(this.bounds.extend(position));\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    modal() {\r\n      this.retrigger();\r\n    }\r\n  }\r\n};\r\n\r\nexport default GoogleMap;\r\nexport { GoogleMap as mdbGoogleMap };\r\n</script>\r\n<style scoped>\r\n.google-map {\r\n  width: 800px;\r\n  height: 600px;\r\n  /* margin: 0 auto;\r\n  background: gray; */\r\n}\r\n</style>\r\n"]}]}
{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/TalentScout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/TalentScout.vue","mtime":1564073301460},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navbar from \"../Nav.vue\"\nimport ServicesMixin from \"../mixins/services-mixin\";\n\nexport default {\n    name: \"TalentScout\",\n    mixins: [ServicesMixin],\n    components: {\n        Navbar\n    },\n    data () {\n        return {\n            searchResults: [],\n            usersFound: {},\n            query: \"\"\n        }\n    },\n    methods: {\n        search: function () {\n            this.performFreeTextSearch(this.query).then(response => {\n                this.searchResults = [];\n                this.usersFound = [];\n\n                response.forEach(entry => {\n                    let user = this.usersFound[this.getKey(entry)];\n\n                    if (!user) {\n                        this.usersFound[entry.fullName] = {\n                            candidateId: entry.candidateId,\n                            email: entry.email,\n                            skills: new Set(),\n                            blacklisted: entry.blacklisted\n                        };\n                        this.usersFound[entry.fullName].skills.add(entry.skill);\n                    } else {\n                        this.usersFound[entry.fullName].skills.add(entry.skill);\n\n                        if (entry.blacklisted)\n                            this.usersFound[entry.fullName].blacklisted = true;\n                    }\n                });\n\n                Object.keys(this.usersFound).forEach(key => {\n                    let foundUser = this.usersFound[key];\n\n                    this.searchResults.push({\n                        candidateId: foundUser.candidateId,\n                        email: foundUser.email,\n                        fullName: key,\n                        skills: foundUser.skills,\n                        blacklisted: foundUser.blacklisted\n                    })\n                });\n            });\n        },\n        getRedirectUrl: function (candidateId) {\n            return \"profile/\" + candidateId;\n        },\n        getKey: function(user) {\n            return user.fullName;\n        },\n        getBlacklistStatusText: function (status) {\n            return status === true ? \"Yes\" : \"No\";\n        },\n        showSkills: function (user) {\n            this.getLinkedInSkills(user.candidateId).then(skills => {\n                this.$swal(\"Skills of \" + user.fullName, skills.toString(), \"info\")\n            });\n        },\n        showApplications: function (user) {\n            this.getCandidateApplications(user.candidateId).then(applications => {\n                let jobTitles = [];\n\n                applications.forEach(application => {\n                    jobTitles.push(application.jobPostTitle)\n                });\n\n                this.$swal(\"Applications of \" + user.fullName, jobTitles.toString(), \"info\");\n            })\n        },\n    }\n}\n",{"version":3,"sources":["TalentScout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TalentScout.vue","sourceRoot":"src/components/HR-Admin","sourcesContent":["<template>\n<div class=\"talent-scout\">\n    <Navbar></Navbar>\n    <div class=\"prelude\">\n        <h1>Talent Scout</h1>\n        <p>Search for any keyword, searches are done on name, email, skill fields.</p>\n    </div>\n    <div class=\"container\">\n        <div class=\"form-group search\">\n            <label for=\"search\">Search anything</label>\n            <div class=\"form-inline\">\n                <input type=\"text\" class=\"form-control\" id=\"search\" placeholder=\"Search\" v-model=\"query\" required>\n                <button class=\"btn btn-info\" @click=\"search()\">Search</button>\n            </div>\n        </div>\n\n        <div class=\"card results-table\">\n            <table class=\"table table-hover\">\n                <thead class=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Blacklisted</th>\n                    <th scope=\"col\">View skills</th>\n                    <th scope=\"col\">View applications</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-for=\"(searchResult, i) in searchResults\">\n                    <th scope=\"row\">{{ i + 1 }}</th>\n                    <td scope=\"row\"><router-link :to=\"getRedirectUrl(searchResult.candidateId)\">{{ searchResult.fullName }}</router-link></td>\n                    <td>{{ searchResult.email }}</td>\n                    <td>{{ getBlacklistStatusText(searchResult.blacklisted) }}</td>\n                    <td>\n                        <button type=\"button\" class=\"btn btn-light\" @click=\"showSkills(searchResult)\">View Skills</button>\n                    </td>\n                    <td>\n                        <button type=\"button\" class=\"btn btn-light\" @click=\"showApplications(searchResult)\">View Applications</button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n    import Navbar from \"../Nav.vue\"\n    import ServicesMixin from \"../mixins/services-mixin\";\n\n    export default {\n        name: \"TalentScout\",\n        mixins: [ServicesMixin],\n        components: {\n            Navbar\n        },\n        data () {\n            return {\n                searchResults: [],\n                usersFound: {},\n                query: \"\"\n            }\n        },\n        methods: {\n            search: function () {\n                this.performFreeTextSearch(this.query).then(response => {\n                    this.searchResults = [];\n                    this.usersFound = [];\n\n                    response.forEach(entry => {\n                        let user = this.usersFound[this.getKey(entry)];\n\n                        if (!user) {\n                            this.usersFound[entry.fullName] = {\n                                candidateId: entry.candidateId,\n                                email: entry.email,\n                                skills: new Set(),\n                                blacklisted: entry.blacklisted\n                            };\n                            this.usersFound[entry.fullName].skills.add(entry.skill);\n                        } else {\n                            this.usersFound[entry.fullName].skills.add(entry.skill);\n\n                            if (entry.blacklisted)\n                                this.usersFound[entry.fullName].blacklisted = true;\n                        }\n                    });\n\n                    Object.keys(this.usersFound).forEach(key => {\n                        let foundUser = this.usersFound[key];\n\n                        this.searchResults.push({\n                            candidateId: foundUser.candidateId,\n                            email: foundUser.email,\n                            fullName: key,\n                            skills: foundUser.skills,\n                            blacklisted: foundUser.blacklisted\n                        })\n                    });\n                });\n            },\n            getRedirectUrl: function (candidateId) {\n                return \"profile/\" + candidateId;\n            },\n            getKey: function(user) {\n                return user.fullName;\n            },\n            getBlacklistStatusText: function (status) {\n                return status === true ? \"Yes\" : \"No\";\n            },\n            showSkills: function (user) {\n                this.getLinkedInSkills(user.candidateId).then(skills => {\n                    this.$swal(\"Skills of \" + user.fullName, skills.toString(), \"info\")\n                });\n            },\n            showApplications: function (user) {\n                this.getCandidateApplications(user.candidateId).then(applications => {\n                    let jobTitles = [];\n\n                    applications.forEach(application => {\n                        jobTitles.push(application.jobPostTitle)\n                    });\n\n                    this.$swal(\"Applications of \" + user.fullName, jobTitles.toString(), \"info\");\n                })\n            },\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import \"../../styles/abstracts/typography\";\n\n    .talent-scout {\n        @include set_font_montserrat();\n    }\n\n    #search {\n        width: 500px;\n        margin-right: 1rem;\n    }\n\n    .prelude {\n        text-align: center;\n        margin-top: 2rem;\n\n        h1 {\n            font-size: 50px;\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    .form-group {\n        margin-left: 15vw;\n    }\n\n    .table-hover {\n        margin-bottom: 0;\n    }\n\n    .table {\n        .btn {\n            color: black;\n            background-color: darken(#e9ecef, 5%);\n        }\n    }\n\n    .results-table {\n        margin-top: 10vh;\n    }\n\n    .search {\n        margin-top: 5vh;\n    }\n</style>\n"]}]}
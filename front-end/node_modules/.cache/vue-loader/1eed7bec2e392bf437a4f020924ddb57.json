{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/Carousel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Advanced/Carousel.vue","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport classNames from 'classnames';\r\nimport CarouselNavigation from './CarouselNavigation';\r\nimport CarouselInner from './CarouselInner';\r\nimport CarouselIndicators from './CarouselIndicators';\r\nimport CarouselIndicator from './CarouselIndicator';\r\n\r\nconst Carousel ={\r\n  components: {\r\n    CarouselNavigation,\r\n    CarouselInner,\r\n    CarouselIndicators,\r\n    CarouselIndicator\r\n  },\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"div\"\r\n    },\r\n    interval: {\r\n      type: [Number, Boolean],\r\n      default: 10000\r\n    },\r\n    full: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    half: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fade: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    multi: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    thumbnails: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    testimonial: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showIndicators: {\r\n      type: Boolean\r\n    },\r\n    showControls: {\r\n      type: Boolean\r\n    },\r\n    slide: {\r\n      type: Boolean\r\n    },\r\n    leftIcon: {\r\n      type: String,\r\n      default: 'chevron-left'\r\n    },\r\n    rightIcon: {\r\n      type: String,\r\n      default: 'chevron-right'\r\n    },\r\n    floating: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    navClass: {\r\n      type: String\r\n    },\r\n    indicatorClass: {\r\n      type: String\r\n    },\r\n    indicatorStyle: {\r\n      type: [Object]\r\n    },\r\n    touch: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      page: 0,\r\n      items: [],\r\n      thumbnailsSrc: []\r\n    };\r\n  },\r\n  methods: {\r\n    slideEffect() {\r\n      let page = this.page;\r\n      this.items.forEach(function(item, index) {\r\n        let slideIndex = page - index;\r\n        if (slideIndex < 0) {\r\n          item.style.position = 'absolute';\r\n          item.style.left = '100%';\r\n        } else if (slideIndex > 0) {\r\n          item.style.position = 'absolute';\r\n          item.style.left = '-100%';\r\n        } else {\r\n          item.style.position = 'relative';\r\n          item.style.left = 0;\r\n        }\r\n      });\r\n    },\r\n    changeSlide(index) {\r\n      if (this.slide) {\r\n        this.page = index;\r\n        this.slideEffect();\r\n      } \r\n      else {\r\n        // this.items[this.page].classList.remove('active');\r\n        this.page = index;\r\n        // this.items[this.page].classList.add('active');\r\n      }\r\n     \r\n    },\r\n    slidePage(target) {\r\n      if (target === \"next\") {\r\n        if (this.page < this.itemsNumber) {\r\n          this.changeSlide(this.page + 1);\r\n        } else {\r\n          this.changeSlide(0);\r\n        }\r\n      } else if (target === \"prev\") {\r\n        if (this.page == 0) {\r\n          this.changeSlide(this.itemsNumber);\r\n        } else {\r\n          this.changeSlide(this.page - 1);\r\n        }\r\n      } else {\r\n        this.changeSlide(target);\r\n      }\r\n    },\r\n    autoSlide() {\r\n      if (this.interval) {\r\n        this.startSlide = setInterval(() => {\r\n          this.slidePage('next');\r\n        }, this.interval);\r\n      }\r\n    },\r\n    handleChangeSlide(showSlide) {\r\n      this.slidePage(showSlide.slideIndex);\r\n      clearInterval(this.startSlide);\r\n      this.autoSlide();\r\n    },\r\n    active(index) {\r\n      if (index == this.page) return true;\r\n    },\r\n    slideLeft() {\r\n      this.slidePage('next');\r\n    },\r\n    slideRight() {\r\n      this.slidePage('prev');\r\n    },\r\n  },\r\n  mounted() {\r\n    let items = [];\r\n    let thumbnails = [];\r\n    let itemsNumber = 0;\r\n    this.$slots.default.forEach(function(slot){\r\n      if (slot.elm.nodeType !== 3) {\r\n        items.push(slot.elm);\r\n        thumbnails.push(slot.componentInstance.src);\r\n        itemsNumber++;\r\n      }\r\n    });\r\n    this.items = items;\r\n    this.itemsNumber = itemsNumber - 1;\r\n    this.thumbnailsSrc = thumbnails;\r\n    if (this.slide) {\r\n      this.items.forEach(function(item, index) {\r\n        item.classList.add('active', 'carousel-slide-item');\r\n      });\r\n      this.slideEffect();\r\n    } else {\r\n      this.items[this.page].classList.add('active');\r\n    }\r\n    this.autoSlide();\r\n  },\r\n  computed: {\r\n    className() {\r\n      return classNames(\r\n        'carousel',\r\n        this.multi ? 'carousel-multi-item' : 'carousel-fade',\r\n        this.half && 'half',\r\n        this.full && 'full',\r\n        this.fade && 'carousel-fade',\r\n        this.thumbnails && 'carousel-thumbnails',\r\n        this.testimonial && 'testimonial-carousel'\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Carousel;\r\nexport { Carousel as mdbCarousel };\r\n",{"version":3,"sources":["Carousel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"Carousel.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\r\n  <component :is=\"tag\" :class=\"className\">\r\n    <carousel-navigation v-if=\"showControls && multi\" :top=\"multi\" :testimonial=\"testimonial\" :leftIcon=\"leftIcon\" :rightIcon=\"rightIcon\" :floating=\"floating\" :navClass=\"navClass\" @changeSlide=\"handleChangeSlide\"></carousel-navigation>\r\n    <carousel-indicators v-if=\"showIndicators && !thumbnails\">\r\n      <carousel-indicator v-for=\"(item, index) in items\" :key=\"index\" :index=\"index\" :active=\"active(index)\" :indicatorClass=\"indicatorClass\" @changeSlide=\"handleChangeSlide\"/>\r\n    </carousel-indicators>\r\n    <carousel-inner v-if=\"touch\" v-touch:swipe.left=\"slideLeft\" v-touch:swipe.right=\"slideRight\">\r\n      <slot></slot>\r\n    </carousel-inner>\r\n    <carousel-inner v-else :active=\"page\">\r\n      <slot></slot>\r\n    </carousel-inner>\r\n    <carousel-indicators v-if=\"showIndicators && thumbnails\">\r\n      <carousel-indicator  v-for=\"(item, index) in items\" :key=\"index\" :index=\"index\" :active=\"active(index)\" :indicatorClass=\"indicatorClass\" @changeSlide=\"handleChangeSlide\" :src=\"thumbnailsSrc[index]\" :indicatorStyle=\"indicatorStyle\"/>\r\n    </carousel-indicators>\r\n    <carousel-navigation :testimonial=\"testimonial\" v-if=\"showControls && !multi\" @changeSlide=\"handleChangeSlide\"></carousel-navigation>\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport classNames from 'classnames';\r\nimport CarouselNavigation from './CarouselNavigation';\r\nimport CarouselInner from './CarouselInner';\r\nimport CarouselIndicators from './CarouselIndicators';\r\nimport CarouselIndicator from './CarouselIndicator';\r\n\r\nconst Carousel ={\r\n  components: {\r\n    CarouselNavigation,\r\n    CarouselInner,\r\n    CarouselIndicators,\r\n    CarouselIndicator\r\n  },\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"div\"\r\n    },\r\n    interval: {\r\n      type: [Number, Boolean],\r\n      default: 10000\r\n    },\r\n    full: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    half: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fade: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    multi: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    thumbnails: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    testimonial: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showIndicators: {\r\n      type: Boolean\r\n    },\r\n    showControls: {\r\n      type: Boolean\r\n    },\r\n    slide: {\r\n      type: Boolean\r\n    },\r\n    leftIcon: {\r\n      type: String,\r\n      default: 'chevron-left'\r\n    },\r\n    rightIcon: {\r\n      type: String,\r\n      default: 'chevron-right'\r\n    },\r\n    floating: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    navClass: {\r\n      type: String\r\n    },\r\n    indicatorClass: {\r\n      type: String\r\n    },\r\n    indicatorStyle: {\r\n      type: [Object]\r\n    },\r\n    touch: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      page: 0,\r\n      items: [],\r\n      thumbnailsSrc: []\r\n    };\r\n  },\r\n  methods: {\r\n    slideEffect() {\r\n      let page = this.page;\r\n      this.items.forEach(function(item, index) {\r\n        let slideIndex = page - index;\r\n        if (slideIndex < 0) {\r\n          item.style.position = 'absolute';\r\n          item.style.left = '100%';\r\n        } else if (slideIndex > 0) {\r\n          item.style.position = 'absolute';\r\n          item.style.left = '-100%';\r\n        } else {\r\n          item.style.position = 'relative';\r\n          item.style.left = 0;\r\n        }\r\n      });\r\n    },\r\n    changeSlide(index) {\r\n      if (this.slide) {\r\n        this.page = index;\r\n        this.slideEffect();\r\n      } \r\n      else {\r\n        // this.items[this.page].classList.remove('active');\r\n        this.page = index;\r\n        // this.items[this.page].classList.add('active');\r\n      }\r\n     \r\n    },\r\n    slidePage(target) {\r\n      if (target === \"next\") {\r\n        if (this.page < this.itemsNumber) {\r\n          this.changeSlide(this.page + 1);\r\n        } else {\r\n          this.changeSlide(0);\r\n        }\r\n      } else if (target === \"prev\") {\r\n        if (this.page == 0) {\r\n          this.changeSlide(this.itemsNumber);\r\n        } else {\r\n          this.changeSlide(this.page - 1);\r\n        }\r\n      } else {\r\n        this.changeSlide(target);\r\n      }\r\n    },\r\n    autoSlide() {\r\n      if (this.interval) {\r\n        this.startSlide = setInterval(() => {\r\n          this.slidePage('next');\r\n        }, this.interval);\r\n      }\r\n    },\r\n    handleChangeSlide(showSlide) {\r\n      this.slidePage(showSlide.slideIndex);\r\n      clearInterval(this.startSlide);\r\n      this.autoSlide();\r\n    },\r\n    active(index) {\r\n      if (index == this.page) return true;\r\n    },\r\n    slideLeft() {\r\n      this.slidePage('next');\r\n    },\r\n    slideRight() {\r\n      this.slidePage('prev');\r\n    },\r\n  },\r\n  mounted() {\r\n    let items = [];\r\n    let thumbnails = [];\r\n    let itemsNumber = 0;\r\n    this.$slots.default.forEach(function(slot){\r\n      if (slot.elm.nodeType !== 3) {\r\n        items.push(slot.elm);\r\n        thumbnails.push(slot.componentInstance.src);\r\n        itemsNumber++;\r\n      }\r\n    });\r\n    this.items = items;\r\n    this.itemsNumber = itemsNumber - 1;\r\n    this.thumbnailsSrc = thumbnails;\r\n    if (this.slide) {\r\n      this.items.forEach(function(item, index) {\r\n        item.classList.add('active', 'carousel-slide-item');\r\n      });\r\n      this.slideEffect();\r\n    } else {\r\n      this.items[this.page].classList.add('active');\r\n    }\r\n    this.autoSlide();\r\n  },\r\n  computed: {\r\n    className() {\r\n      return classNames(\r\n        'carousel',\r\n        this.multi ? 'carousel-multi-item' : 'carousel-fade',\r\n        this.half && 'half',\r\n        this.full && 'full',\r\n        this.fade && 'carousel-fade',\r\n        this.thumbnails && 'carousel-thumbnails',\r\n        this.testimonial && 'testimonial-carousel'\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Carousel;\r\nexport { Carousel as mdbCarousel };\r\n</script>\r\n\r\n<style>\r\n.carousel-inner {\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.carousel-fade .carousel-item {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block !important;\r\n  opacity: 0;\r\n  z-index: 0;\r\n  transition: transform 0ms ease-in-out, opacity 0.8s ease-out;\r\n}\r\n\r\n.carousel-fade .carousel-item.active {\r\n  position: relative;\r\n  z-index: 1;\r\n  opacity: 1;\r\n}\r\n\r\n.carousel-control-prev, .carousel-control-next, .carousel-item-prev, .carousel-item-next {\r\n  position: absolute;\r\n  z-index: 2;\r\n}\r\n\r\n.carousel-multi-item .carousel-slide-item {\r\n  transition: left 0.5s;\r\n  top: 0;\r\n}\r\n\r\n</style>\r\n\r\n<style scoped>\r\n.full, .full .carousel-item{\r\n  height: 100% !important;\r\n}\r\n\r\n.half {\r\n  height: 50%;\r\n}\r\n</style>\r\n"]}]}
{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/Job-Details-Page/JobDetails.vue?vue&type=style&index=0&id=d61ff6ec&scoped=true&lang=scss&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/Job-Details-Page/JobDetails.vue","mtime":1563750009734},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../styles/abstracts/colors';\n@import '../../styles/abstracts/typography';\n\n.post {\n    @include set_font_montserrat;\n    border: 3px solid $color-primary-0;\n    border-radius: 40px;\n    padding: 2rem 2rem 0 2rem;\n}\n\n.post__title {\n    font-size: 2.5rem;\n    font-weight: lighter;\n    letter-spacing: 0.1rem;\n    margin-bottom: 2rem;\n    text-align: center;\n}\n\n.post__description {\n    margin-bottom: 2rem;\n    letter-spacing: 0.05rem;\n}\n\n.job-card__bottom-container {\n    height: 5rem;\n    width: 75vw;\n    position: relative;\n}\n\n.post__buttons--button {\n    position: absolute;\n    top: 80%;\n    right: 1rem;\n    padding: 10px 20px 10px 20px;\n    border-radius: 200px;\n\n    &:hover, &:active {\n        transform: scale(1.1) perspective(1px)\n    }\n}\n\n.btn-info {\n    background: $color-primary-2 !important;\n}\n\n.link {\n    @include remove_link_styles;\n}\n\nli {\n    list-style: none;\n    border-bottom: 1px solid #dddddd;\n    padding-top: 1.5rem;\n    margin-top: 0;\n\n    &:hover {\n        background: rgba($color-complement-2, 40%);\n    }\n}\n\n.space {\n    height: 2rem;\n}\n\n.is-active {\n    margin-bottom: 10px;\n}\n\nul {\n    margin-bottom: 0;\n    padding-left: 0;\n}\n\n.post__requirements--invite {\n    margin-bottom: 1rem;\n}\n",{"version":3,"sources":["JobDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"JobDetails.vue","sourceRoot":"src/components/Job-Details-Page","sourcesContent":["<template>\n<div>\n    <Nav></Nav>\n    <br>\n    <div class=\"container post\" v-if=\"dataFetched\">\n        <h1 class=\"post__title\" @input=\"changeContentEdited(0)\" :contenteditable=\"isHrExpert()\">{{jobDetails.title}}</h1>\n        <p class=\"post__description\" @input=\"changeContentEdited(1)\" :contenteditable=\"isHrExpert()\">{{jobDetails.description}}</p>\n        <div>\n            <p class=\"invite\"><strong>If you think you satisfy these requirements:</strong></p>\n            <ul v-for=\"(requirementObject, i) in jobRequirements\" class=\"post__requirements\"\n                @input=\"changeRequirementEdited(i)\" :contenteditable=\"isHrExpert()\"\n                :id=\"requirementObject.id\">\n                <li>{{requirementObject.requirement}}</li>\n            </ul>\n            <div class=\"space\"></div>\n            <p><strong>We would like to see you in our team!</strong></p>\n        </div>\n        <div class=\"job-card__bottom-container\" v-if=\"!isHrExpert()\">\n            <b-button type=\"button\" class=\"btn-info post__buttons--button\" v-on:click=\"saveIfAuthenticated()\">\n                Apply\n            </b-button>\n        </div>\n        <div class=\"job-card__bottom-container\" v-else>\n            <b-button type=\"button\"\n                      class=\"btn-danger post__buttons--button\"\n                      v-on:click=\"submitChanges()\">\n                    Save changes\n            </b-button>\n        </div>\n        <div>\n            <p class=\"activation_date\" @input=\"changeContentEdited(2)\" v-model=\"jobDetails.activationDate\" :contenteditable=\"isHrExpert()\">\n                <em>Activation date: {{jobDetails.activationDate}}</em>\n            </p>\n            <p class=\"expiration_date\" @input=\"changeContentEdited(3)\" v-model=\"jobDetails.expirationDate\" :contenteditable=\"isHrExpert()\">\n                <em>Expiration date: {{jobDetails.expirationDate}}</em>\n            </p>\n            <div class=\"form-check is-active\" v-if=\"isHrExpert()\">\n                <input type=\"checkbox\" class=\"form-check-input is_active\" id=\"isActive\"\n                       :checked=\"jobDetails.isActive\" v-model=\"jobDetails.isActive\" @input=\"changeContentEdited(4)\">\n                <label class=\"form-check-label\" for=\"isActive\">Job Post is active</label>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n    import Nav from \"../Nav.vue\";\n    import ServicesMixin from \"../mixins/services-mixin\";\n\n    export default {\n        name: \"JobApply\",\n        mixins: [ServicesMixin],\n        components: {\n            Nav: Nav\n        },\n        data() {\n            return {\n                jobDetails: {},\n                jobRequirements: [],\n                dataFetched: false,\n                userLoggedIn: true,\n                anyContentIsEdited: false,\n                candidateBlacklisted: false,\n                linkedInLogin: \"https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=86uobfdmclzprd\" +\n                                \"&redirect_uri=http://localhost:8080\" +\n                                \"&state=ASk220aSFAxx&scope=r_liteprofile%20r_emailaddress%20w_member_social\",\n                contentEditableClasses: [\n                    { className: 'post__title', edited: false },\n                    { className: 'post__description', edited: false },\n                    { className: 'activation_date', edited: false },\n                    { className: 'expiration_date', edited: false },\n                    { className: 'is_active', edited: false}\n                ]\n            }\n        },\n        computed: {\n            userAuthenticated() {\n                return this.$store.getters.userAuthenticated;\n            },\n            hrExpertAuthenticated() {\n                return this.$store.getters.hrExpertAuthenticated;\n            }\n        },\n        methods: {\n            getJobPostId: function () {\n                const url = window.location.pathname;\n                // return the first url param\n                return url.split(\"/\")[2];\n            },\n            isHrExpertUrl: function () {\n                const url = window.location.pathname;\n                return url.split(\"/\")[3] === 'hr';\n            },\n            isHrExpert: function () {\n                return this.isHrExpertUrl() && this.$store.getters.hrExpertAuthenticated;\n            },\n            saveApplication: function () {\n                if (!this.candidateBlacklisted) {\n                    const userId = this.$store.state.userId;\n\n                    try {\n                        this.saveApplicationWithIdAndJobPost(userId, this.getJobPostId())\n                            .then((response) => {\n                                if (response.status === 200) {\n                                    // If application already exists\n                                    this.showApplicationSavedAlert();\n                                    this.redirectToJobPostsAfterWaiting();\n                                } else {\n                                    this.showApplicationAlreadyExistsAlert();\n                                }\n                            });\n                    } catch (e) {\n                        console.log(e.status);\n                        this.showCandidateBlacklistedAlert();\n                    }\n                }\n            },\n            submitChanges: function () {\n                const contentEditableClasses = this.contentEditableClasses;\n\n                if (this.anyContentIsEdited) {\n                    try {\n                        let title = document.getElementsByClassName(contentEditableClasses[0].className)[0].innerText;\n                        let description = document.getElementsByClassName(contentEditableClasses[1].className)[0].innerText;\n                        let activationDate = this.formatDateInput(document.getElementsByClassName(contentEditableClasses[2].className)[0].innerText);\n                        let expirationDate = this.formatDateInput(document.getElementsByClassName(contentEditableClasses[3].className)[0].innerText);\n\n                        let active = this.jobDetails.isActive;\n\n                        this.updateJobPostDetails(this.getJobPostId(), title, active,\n                                                  description, activationDate, expirationDate);\n                        this.updateRequirements();\n\n                        this.showSuccessAlert();\n                    } catch (e) {\n                        this.showFailureAlert();\n                    }\n                } else {\n                    this.showNoContentIsEditedAlert();\n                }\n            },\n            updateRequirements: function () {\n                this.jobRequirements.forEach(requirementObject => {\n                    if (requirementObject.edited === true) {\n                        const requirementEdited = document.getElementById(requirementObject.id).innerText;\n                        let urlifiedRequirement = requirementEdited.replace(/%20/g, \" \");\n\n                        this.updateJobRequirementWithId(requirementObject.id, urlifiedRequirement);\n                    }\n                });\n            },\n            formatDateInput: function (date) {\n                let year = date.split(\"-\")[0].split(\": \")[1];\n                let month = date.split(\"-\")[1];\n                let day = parseInt(date.split(\"-\")[2]) + 1;\n\n                if (day < 10) {\n                    day = \"0\" + day;\n                }\n\n                const dateFormatted = day + \"/\" + month + \"/\" + year;\n                return dateFormatted;\n            },\n            saveIfAuthenticated: function () {\n                if (this.userAuthenticated) {\n                    this.saveApplication()\n                } else {\n                    this.showNotLoggedInAlert();\n                    setTimeout(() => {\n                        window.location.href =  this.linkedInLogin;\n                    }, 2000)\n                }\n            },\n            changeContentEdited: function (index) {\n                this.contentEditableClasses[index].edited = true;\n                this.anyContentIsEdited = true;\n            },\n            changeRequirementEdited: function(index) {\n                this.jobRequirements[index].edited = true;\n                this.anyContentIsEdited = true;\n            },\n            showSuccessAlert: function () {\n                this.$swal('Saved', 'Your changes are successfully saved', 'success');\n            },\n            showApplicationSavedAlert: function () {\n                this.$swal('Your application is taken', 'Your application is taken, good luck', 'success');\n            },\n            showApplicationAlreadyExistsAlert: function () {\n                this.$swal('Already applied', 'You have already applied for this job.', 'error');\n            },\n            showNoContentIsEditedAlert: function () {\n                this.$swal('No edit', 'Content is not edited' , 'warning');\n            },\n            showFailureAlert: function () {\n                this.$swal('Error', 'An error occurred' , 'error');\n            },\n            showCandidateBlacklistedAlert: function () {\n                this.$swal('Banned', 'You are banned from applying for jobs!', 'error');\n            },\n            showNotLoggedInAlert: function () {\n                this.$swal('You are not logged in', 'You need to log in before applying, redirecting to login');\n            },\n            redirectToJobPostsAfterWaiting: function () {\n                setTimeout(() => this.$router.push('/job-posts'), 3000);\n            },\n            fetchCandidateBlacklistStatus: function (candidateId) {\n                this.getCandidateBlacklistStatus(candidateId).then(blacklistStatus => {\n                    this.candidateBlacklisted = blacklistStatus;\n                })\n            },\n            fetchJobRequirements: function (jobId) {\n                this.getJobRequirements(jobId).then(jobRequirements => {\n                    jobRequirements.forEach(jobRequirementsDto => {\n                        this.jobRequirements.push({\n                            id: jobRequirementsDto.id,\n                            requirement: jobRequirementsDto.requirement,\n                            edited: false\n                        });\n                    })\n                });\n            },\n            fetchJobDetails: function (jobId) {\n                this.getJobDetails(jobId).then(jobDetails => {\n                    this.jobDetails = jobDetails;\n                });\n            },\n        },\n        mounted() {\n            const jobId = this.getJobPostId();\n            this.fetchJobRequirements(jobId);\n            this.fetchJobDetails(jobId);\n            this.fetchCandidateBlacklistStatus(this.$store.state.userId);\n\n            this.dataFetched = true;\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import '../../styles/abstracts/colors';\n    @import '../../styles/abstracts/typography';\n\n    .post {\n        @include set_font_montserrat;\n        border: 3px solid $color-primary-0;\n        border-radius: 40px;\n        padding: 2rem 2rem 0 2rem;\n    }\n\n    .post__title {\n        font-size: 2.5rem;\n        font-weight: lighter;\n        letter-spacing: 0.1rem;\n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    .post__description {\n        margin-bottom: 2rem;\n        letter-spacing: 0.05rem;\n    }\n\n    .job-card__bottom-container {\n        height: 5rem;\n        width: 75vw;\n        position: relative;\n    }\n\n    .post__buttons--button {\n        position: absolute;\n        top: 80%;\n        right: 1rem;\n        padding: 10px 20px 10px 20px;\n        border-radius: 200px;\n\n        &:hover, &:active {\n            transform: scale(1.1) perspective(1px)\n        }\n    }\n\n    .btn-info {\n        background: $color-primary-2 !important;\n    }\n\n    .link {\n        @include remove_link_styles;\n    }\n\n    li {\n        list-style: none;\n        border-bottom: 1px solid #dddddd;\n        padding-top: 1.5rem;\n        margin-top: 0;\n\n        &:hover {\n            background: rgba($color-complement-2, 40%);\n        }\n    }\n\n    .space {\n        height: 2rem;\n    }\n\n    .is-active {\n        margin-bottom: 10px;\n    }\n\n    ul {\n        margin-bottom: 0;\n        padding-left: 0;\n    }\n\n    .post__requirements--invite {\n        margin-bottom: 1rem;\n    }\n</style>\n"]}]}
{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Layout/MasonryItem.vue?vue&type=style&index=0&id=583853b4&scoped=true&lang=css&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/mdbvue/src/components/Layout/MasonryItem.vue","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.masonry-with-columns div {\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex: 1 0 auto;\r\n  -ms-flex: 1 0 auto;\r\n  flex: 1 0 auto;\r\n}\r\n\r\n.masonry-image {\r\n  width: 100%;\r\n}\r\n\r\n.slide-enter-active {\r\n  transition: all 0.8s ease;\r\n}\r\n.slide-leave-active {\r\n  transition: all 0.8s ease;\r\n}\r\n\r\n.slide-enter {\r\n  transform: translateX(10px);\r\n  /* opacity: 0; */\r\n}\r\n",{"version":3,"sources":["MasonryItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MasonryItem.vue","sourceRoot":"node_modules/mdbvue/src/components/Layout","sourcesContent":["<template>\r\n  <transition\r\n    appear\r\n    name=\"slide\">\r\n    <component v-show=\"show\" :is=\"tag\" :style=\"style\">\r\n      <img class=\"masonry-image\" v-if=\"src\" :src=\"src\">\r\n      <slot v-else></slot>\r\n    </component>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nconst MasonryItem = {\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"div\"\r\n    },\r\n    order: {\r\n      type: [String, Number],\r\n      default: \"\" || 0\r\n    },\r\n    itemStyle: {\r\n      type: Object\r\n    },\r\n    src: String\r\n  },\r\n  data() {\r\n    return {\r\n      small: false,\r\n      medium: false,\r\n      show: true\r\n    };\r\n  },\r\n  computed: {\r\n    style() {\r\n      const styles = this.small ? {...this.itemStyle, \"width\": \"100%\"} : this.medium ? {...this.itemStyle, \"width\" : \"50%\"} : this.itemStyle;\r\n      return {\r\n        order: this.order,\r\n        ...styles\r\n      };\r\n    },\r\n    isResponsive() {\r\n      return this.$parent.responsive;\r\n    }\r\n  },\r\n  methods: {\r\n    checkScreenSize() {\r\n      if (window.innerWidth < 600) {\r\n        this.small = true;\r\n        this.medium = false;\r\n      }\r\n      else if (window.innerWidth < 1200) {\r\n        this.medium = true;\r\n        this.small = false;\r\n      }\r\n      else {\r\n        this.small = false;\r\n        this.medium = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.isResponsive) {\r\n      this.checkScreenSize();\r\n      window.addEventListener(\"resize\", this.checkScreenSize);\r\n    }\r\n  },\r\n \r\n  beforeDestroy() {\r\n    if (this.isResponsive) {\r\n      window.removeEventListener(\"resize\", this.checkScreenSize);\r\n    }\r\n  },\r\n  watch: {\r\n    small(val, oldValue) {\r\n      if (val !== oldValue) {\r\n        this.show = false;\r\n        setTimeout(() => {this.show = true;}, 300);\r\n      }\r\n    },\r\n    medium(val, oldValue) {\r\n      if (val !== oldValue) {\r\n        this.show = false;\r\n        setTimeout(() => {this.show = true;}, 300);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default MasonryItem;\r\nexport { MasonryItem as mdbMasonryItem };\r\n</script>\r\n\r\n<style scoped>\r\n.masonry-with-columns div {\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex: 1 0 auto;\r\n  -ms-flex: 1 0 auto;\r\n  flex: 1 0 auto;\r\n}\r\n\r\n.masonry-image {\r\n  width: 100%;\r\n}\r\n\r\n.slide-enter-active {\r\n  transition: all 0.8s ease;\r\n}\r\n.slide-leave-active {\r\n  transition: all 0.8s ease;\r\n}\r\n\r\n.slide-enter {\r\n  transform: translateX(10px);\r\n  /* opacity: 0; */\r\n}\r\n</style>\r\n"]}]}
{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/User-Profile/UserProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/User-Profile/UserProfile.vue","mtime":1563969747469},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ServicesMixin from \"../mixins/services-mixin\";\nimport CommonsMixin from \"../mixins/commons-mixin\";\nimport Navbar from \"../Nav.vue\";\nexport default {\n  name: \"UserProfile\",\n  mixins: [ServicesMixin, CommonsMixin],\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      fullName: \"\",\n      imageSource: \"\",\n      skills: null,\n      candidateApplications: [],\n      skillsToAdd: [],\n      NUMBER_OF_ROWS: 1,\n      NUMBER_OF_COLS: 3,\n      blacklisting: false,\n      blacklistReason: \"\",\n      dataFetched: false,\n      skillAdderActivated: false\n    };\n  },\n  methods: {\n    getCandidateId: function getCandidateId() {\n      var url = window.location.pathname; // return the first url param\n\n      return url.split(\"/\")[2];\n    },\n    getJobPostUrlByJobId: function getJobPostUrlByJobId(jobId) {\n      var redirectUrl = '/job-details/' + jobId;\n\n      if (this.$store.getters.hrExpertAuthenticated) {\n        return redirectUrl + '/hr';\n      }\n\n      return redirectUrl + '/us';\n    },\n    revertSkillAdderVisibility: function revertSkillAdderVisibility() {\n      this.skillAdderActivated = !this.skillAdderActivated;\n    },\n    getAddSkillButtonText: function getAddSkillButtonText() {\n      if (this.skillAdderActivated) {\n        return \"Close\";\n      } else {\n        return \"Add a skill\";\n      }\n    },\n    addSkill: function addSkill() {\n      this.skillsToAdd.push(\"\");\n    },\n    saveSkills: function saveSkills() {\n      var _this = this;\n\n      if (this.doesCandidateHaveDuplicateSkillToAdd()) {\n        this.showCandidateAlreadyHasThisSkillAlert();\n      } else {\n        var skills = this.skills.concat(this.skillsToAdd);\n        this.skills = null;\n        this.skillsToAdd = [];\n        this.submitLinkedInSkills(this.getCandidateId(), skills).then(function () {\n          _this.getSkills();\n        });\n      }\n    },\n    getSkills: function getSkills() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.getLinkedInSkills(_this2.getCandidateId()).then(function (skills) {\n          _this2.skills = skills;\n          resolve();\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    },\n    doesCandidateHaveDuplicateSkillToAdd: function doesCandidateHaveDuplicateSkillToAdd() {\n      var _this3 = this;\n\n      var duplicateFound = false;\n      this.skillsToAdd.forEach(function (skillToAdd) {\n        if (_this3.skills.some(function (skill) {\n          return skill.toLowerCase() === skillToAdd.toLowerCase();\n        })) {\n          duplicateFound = true;\n          return true;\n        }\n      });\n      return duplicateFound;\n    },\n    showCandidateAlreadyHasThisSkillAlert: function showCandidateAlreadyHasThisSkillAlert() {\n      this.$swal('Skill already exist', 'You already have this skill', 'warning');\n    },\n    showBlacklistInput: function showBlacklistInput() {\n      this.blacklisting = !this.blacklisting;\n    },\n    addCandidateToBlacklist: function addCandidateToBlacklist() {\n      var id = window.location.pathname.split(\"/\")[2];\n      this.blacklistUser(id, this.blacklistReason);\n      this.showSavedAlert();\n    },\n    showSavedAlert: function showSavedAlert() {\n      this.$swal('Success', 'User is blacklisted', 'success');\n    }\n  },\n  computed: {\n    hrExpertAuthenticated: function hrExpertAuthenticated() {\n      return this.$store.getters.hrExpertAuthenticated;\n    },\n    canSubmit: function canSubmit() {\n      return this.skillsToAdd.every(function (skill) {\n        return !!skill;\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    this.getCandidateProfileDto(this.getCandidateId()).then(function (candidateProfileDto) {\n      _this4.fullName = candidateProfileDto.fullName;\n      _this4.imageSource = candidateProfileDto.imageUrl;\n    });\n    this.getCandidateApplications(this.getCandidateId()).then(function (candidateApplications) {\n      _this4.NUMBER_OF_ROWS = Math.ceil(candidateApplications.length / 3);\n      _this4.candidateApplications = candidateApplications;\n    });\n    this.getSkills();\n    this.dataFetched = true;\n  }\n};",{"version":3,"sources":["UserProfile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"user-profile\" v-if=\"dataFetched\">\n        <Navbar></Navbar>\n        <div class=\"container-box\">\n            <div class=\"profile-info\">\n                <br><br>\n                <img :src=imageSource alt=\"\">\n\n                <h2 class=\"welcome-message\">Welcome, {{fullName}}!</h2>\n                <div class=\"skills\">\n                    <br><br>\n                    <h2>Skills</h2>\n                    <hr>\n\n                    <ol v-if=\"skills\">\n                        <li v-for=\"skill in skills\" class=\"skill\"> {{ skill }} </li>\n                    </ol>\n                    <p v-else> Loading the skills.. </p>\n\n                    <button class=\"btn btn-danger add-skill-button\" v-if=\"this.$store.getters.hrExpertAuthenticated\"\n                            @click=\"showBlacklistInput()\">\n                        Blacklist User\n                    </button>\n                    <div v-else>\n                        <button v-if=\"skillsToAdd.length === 0\"\n                                class=\"btn btn-primary add-skill-button\"\n                                @click=\"addSkill()\">\n                            {{getAddSkillButtonText()}}\n                        </button>\n                        <div v-else class=\"add-skill\">\n                            <input type=\"text\" class=\"form-control skill-input\" placeholder=\"Enter skill\"\n                                   v-model=\"skillsToAdd[i]\" v-for=\"(_, i) in skillsToAdd\">\n                            <div class=\"buttons\">\n                                <button class=\"btn btn-danger\" @click=\"addSkill()\">+</button>\n                                <button class=\"btn btn-danger save-button\"\n                                        v-on:click=\"saveSkills()\"\n                                        :disabled=\"!canSubmit\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div v-if=\"blacklisting\">\n                        <div class=\"input-group input-reason\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">Reason</span>\n                            </div>\n                            <textarea class=\"form-control reason-textbox\" aria-label=\"Enter reason\"\n                                      v-model=\"blacklistReason\"></textarea>\n                        </div>\n                        <button class=\"btn btn-danger save-blacklist\" @click=\"addCandidateToBlacklist()\">Save</button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"applications\">\n                <h2 class=\"applications__title\">Submitted Applications</h2>\n                <div class=\"row applications__row\">\n                    <div class=\"col-lg applications__col\" v-for=\"application in this.candidateApplications\">\n                        <router-link :to=getJobPostUrlByJobId(application.jobPostId) class=\"applications__job-title\">\n                            {{ application.jobPostTitle }}\n                        </router-link>\n                        <p class=\"applications__small-info\">OBSS, {{ application.location }}</p>\n                        <div style=\"height: 10px;\"></div>\n                        <p>Application Status: {{ application.applicationStatus }}</p>\n                        <p>Applied at: {{ application.applicationDate.split(\"T\")[0].split(\"-\").reverse().join(\"-\") }}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import ServicesMixin from \"../mixins/services-mixin\";\n    import CommonsMixin from \"../mixins/commons-mixin\";\n    import Navbar from \"../Nav.vue\";\n\n    export default {\n        name: \"UserProfile\",\n        mixins: [ServicesMixin, CommonsMixin],\n        components: {\n            Navbar\n        },\n        data() {\n            return {\n                fullName: \"\",\n                imageSource: \"\",\n                skills: null,\n                candidateApplications: [],\n                skillsToAdd: [],\n                NUMBER_OF_ROWS: 1,\n                NUMBER_OF_COLS: 3,\n                blacklisting: false,\n                blacklistReason: \"\",\n                dataFetched: false,\n                skillAdderActivated: false\n            }\n        },\n        methods: {\n            getCandidateId: function() {\n                const url = window.location.pathname;\n                // return the first url param\n                return url.split(\"/\")[2];\n            },\n            getJobPostUrlByJobId: function (jobId) {\n                let redirectUrl = '/job-details/' + jobId;\n\n                if (this.$store.getters.hrExpertAuthenticated) {\n                    return redirectUrl + '/hr';\n                }\n\n                return redirectUrl + '/us';\n            },\n            revertSkillAdderVisibility() {\n                this.skillAdderActivated = !this.skillAdderActivated;\n            },\n            getAddSkillButtonText() {\n                if (this.skillAdderActivated) {\n                    return \"Close\";\n                } else {\n                    return \"Add a skill\";\n                }\n            },\n            addSkill: function () {\n                this.skillsToAdd.push(\"\");\n            },\n            saveSkills: function () {\n                if (this.doesCandidateHaveDuplicateSkillToAdd()) {\n                    this.showCandidateAlreadyHasThisSkillAlert();\n                } else {\n                    let skills = this.skills.concat(this.skillsToAdd);\n\n                    this.skills = null;\n                    this.skillsToAdd = [];\n\n                    this.submitLinkedInSkills(this.getCandidateId(), skills).then(() => {\n                        this.getSkills();\n                    })\n                }\n            },\n            getSkills: function () {\n                return new Promise((resolve, reject) => {\n                    this.getLinkedInSkills(this.getCandidateId()).then(skills => {\n                        this.skills = skills;\n                        resolve();\n                    }).catch(error => reject(error));\n                });\n            },\n            doesCandidateHaveDuplicateSkillToAdd: function () {\n                let duplicateFound = false;\n\n                this.skillsToAdd.forEach(skillToAdd => {\n                    if (this.skills.some(skill => skill.toLowerCase() === skillToAdd.toLowerCase())) {\n                        duplicateFound = true;\n                        return true;\n                    }\n                });\n\n                return duplicateFound;\n            },\n            showCandidateAlreadyHasThisSkillAlert: function () {\n                this.$swal('Skill already exist', 'You already have this skill' , 'warning');\n            },\n            showBlacklistInput: function () {\n                this.blacklisting = !this.blacklisting;\n            },\n            addCandidateToBlacklist: function () {\n                const id = window.location.pathname.split(\"/\")[2];\n                this.blacklistUser(id, this.blacklistReason);\n                this.showSavedAlert();\n            },\n            showSavedAlert: function () {\n                this.$swal('Success', 'User is blacklisted', 'success');\n            }\n        },\n        computed: {\n            hrExpertAuthenticated() {\n                return this.$store.getters.hrExpertAuthenticated;\n            },\n            canSubmit () {\n                return this.skillsToAdd.every(skill => !!skill);\n            }\n        },\n        mounted() {\n            this.getCandidateProfileDto(this.getCandidateId())\n                .then(candidateProfileDto => {\n                    this.fullName = candidateProfileDto.fullName;\n                    this.imageSource = candidateProfileDto.imageUrl;\n                });\n\n            this.getCandidateApplications(this.getCandidateId())\n                .then(candidateApplications => {\n                    this.NUMBER_OF_ROWS = Math.ceil(candidateApplications.length / 3);\n                    this.candidateApplications = candidateApplications;\n                });\n\n            this.getSkills();\n            this.dataFetched = true;\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../styles/abstracts/colors.scss\";\n@import \"../../styles/abstracts/typography.scss\";\n\n.user-profile {\n    color: $slightly-blue-black;\n    @include set_font_opensans();\n}\n\n.profile-info {\n    margin-left: 2vw;\n\n    img {\n        max-width: 100px;\n        max-height: 100px;\n        border-radius: 200px;\n        margin-right: 10px;\n    }\n}\n\nh2 {\n    font-size: 25px;\n}\n\n.welcome-message {\n    display: inline;\n    font-size: 20px;\n    margin-left: 1rem;\n}\n\n.applications {\n    border-top: solid 2px darken(rgba(129, 180, 255, 0.27), 5%);\n    background: rgba(129, 180, 255, 0.27);\n    width: 100%;\n    padding-right: 20px;\n    padding-left: 20px;\n    margin-top: 2rem;\n    margin-bottom: 0;\n\n    .applications__small-info {\n        margin-top: 0;\n    }\n}\n\n.applications__row {\n    margin-left: 1rem;\n    height: 320px;\n}\n\n.applications__col {\n    padding: 15px;\n    background: white;\n    height: 240px;\n    margin-right: 2rem;\n    margin-bottom: 15px;\n    border: solid 2px rgba(129, 180, 255, 0.9);\n    font-size: 15px;\n\n    p {\n        margin-top: 15px;\n        margin-bottom: 15px;\n    }\n}\n\n.applications__title {\n    margin-left: 1rem;\n    margin-top: 1rem;\n    margin-bottom: 2rem;\n}\n\n.applications__job-title {\n    font-size: 25px;\n    margin-bottom: 0;\n}\n\n.blacklist-button {\n    margin-left: 20px;\n}\n\n.skill {\n    margin-bottom: 10px;\n}\n\n.skills {\n    ol {\n        margin-bottom: 30px;\n        padding-left: 10px;\n    }\n}\n\nli {\n    margin-left: 1rem;\n    font-size: 18px;\n}\n\n.skill-input {\n    margin-top: 1.5rem;\n    width: 20vw;\n}\n\n.buttons {\n    margin-top: 1rem;\n    button {\n        margin-right: 0.5rem;\n    }\n}\n\n.input-reason {\n    margin-top: 1rem;\n    width: 50rem;\n}\n\n.save-blacklist {\n    margin-top: 1rem;\n}\n</style>\n"],"sourceRoot":"src/components/User-Profile"}]}
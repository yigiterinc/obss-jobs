{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/TalentScout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/TalentScout.vue","mtime":1564048218759},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Navbar from \"../Nav.vue\";\nimport ServicesMixin from \"../mixins/services-mixin\";\nexport default {\n  name: \"TalentScout\",\n  mixins: [ServicesMixin],\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      searchResults: [],\n      usersFound: {},\n      query: \"\"\n    };\n  },\n  methods: {\n    search: function search() {\n      var _this = this;\n\n      this.performFreeTextSearch(this.query).then(function (response) {\n        _this.searchResults = [];\n        _this.usersFound = [];\n        response.forEach(function (entry) {\n          var user = _this.usersFound[_this.getKey(entry)];\n\n          if (!user) {\n            _this.usersFound[entry.fullName] = {\n              candidateId: entry.candidateId,\n              email: entry.email,\n              skills: new Set(),\n              blacklisted: entry.blacklisted\n            };\n\n            _this.usersFound[entry.fullName].skills.add(entry.skill);\n          } else {\n            _this.usersFound[entry.fullName].skills.add(entry.skill);\n\n            if (entry.blacklisted) _this.usersFound[entry.fullName].blacklisted = true;\n          }\n        });\n        Object.keys(_this.usersFound).forEach(function (key) {\n          var foundUser = _this.usersFound[key];\n\n          _this.searchResults.push({\n            candidateId: foundUser.candidateId,\n            email: foundUser.email,\n            fullName: key,\n            skills: foundUser.skills,\n            blacklisted: foundUser.blacklisted\n          });\n        });\n      });\n    },\n    getRedirectUrl: function getRedirectUrl(candidateId) {\n      return \"profile/\" + candidateId;\n    },\n    getKey: function getKey(user) {\n      return user.fullName;\n    },\n    getBlacklistStatusText: function getBlacklistStatusText(status) {\n      return status === true ? \"Yes\" : \"No\";\n    },\n    showSkills: function showSkills(user) {\n      var _this2 = this;\n\n      this.getLinkedInSkills(user.candidateId).then(function (skills) {\n        _this2.$swal(\"Skills of \" + user.fullName, skills.toString(), \"info\");\n      });\n    },\n    showApplications: function showApplications(user) {\n      var _this3 = this;\n\n      this.getCandidateApplications(user.candidateId).then(function (applications) {\n        console.log(applications);\n        var jobTitles = [];\n        applications.forEach(function (application) {\n          jobTitles.push(application.jobPostTitle);\n        });\n        console.log(jobTitles);\n\n        _this3.$swal(\"Applications of \" + user.fullName, jobTitles.toString(), \"info\");\n      });\n    }\n  }\n};",{"version":3,"sources":["TalentScout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"talent-scout\">\n    <Navbar></Navbar>\n    <div class=\"prelude\">\n        <h1>Talent Scout</h1>\n        <p>Search for any keyword, searches are done on name, email, skill fields.</p>\n    </div>\n    <div class=\"container\">\n        <div class=\"form-group search\">\n            <label for=\"search\">Search anything</label>\n            <div class=\"form-inline\">\n                <input type=\"text\" class=\"form-control\" id=\"search\" placeholder=\"Search\" v-model=\"query\" required>\n                <button class=\"btn btn-info\" @click=\"search()\">Search</button>\n            </div>\n        </div>\n\n        <div class=\"card results-table\">\n            <table class=\"table table-hover\">\n                <thead class=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Blacklisted</th>\n                    <th scope=\"col\">View skills</th>\n                    <th scope=\"col\">View applications</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-for=\"(searchResult, i) in searchResults\">\n                    <th scope=\"row\">{{ i + 1 }}</th>\n                    <td scope=\"row\"><router-link :to=\"getRedirectUrl(searchResult.candidateId)\">{{ searchResult.fullName }}</router-link></td>\n                    <td>{{ searchResult.email }}</td>\n                    <td>{{ getBlacklistStatusText(searchResult.blacklisted) }}</td>\n                    <td>\n                        <button type=\"button\" class=\"btn btn-light\" @click=\"showSkills(searchResult)\">View Skills</button>\n                    </td>\n                    <td>\n                        <button type=\"button\" class=\"btn btn-light\" @click=\"showApplications(searchResult)\">View Applications</button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n    import Navbar from \"../Nav.vue\"\n    import ServicesMixin from \"../mixins/services-mixin\";\n\n    export default {\n        name: \"TalentScout\",\n        mixins: [ServicesMixin],\n        components: {\n            Navbar\n        },\n        data () {\n            return {\n                searchResults: [],\n                usersFound: {},\n                query: \"\"\n            }\n        },\n        methods: {\n            search: function () {\n                this.performFreeTextSearch(this.query).then(response => {\n                    this.searchResults = [];\n                    this.usersFound = [];\n\n                    response.forEach(entry => {\n                        let user = this.usersFound[this.getKey(entry)];\n\n                        if (!user) {\n                            this.usersFound[entry.fullName] = {\n                                candidateId: entry.candidateId,\n                                email: entry.email,\n                                skills: new Set(),\n                                blacklisted: entry.blacklisted\n                            };\n                            this.usersFound[entry.fullName].skills.add(entry.skill);\n                        } else {\n                            this.usersFound[entry.fullName].skills.add(entry.skill);\n\n                            if (entry.blacklisted)\n                                this.usersFound[entry.fullName].blacklisted = true;\n                        }\n                    });\n\n                    Object.keys(this.usersFound).forEach(key => {\n                        let foundUser = this.usersFound[key];\n\n                        this.searchResults.push({\n                            candidateId: foundUser.candidateId,\n                            email: foundUser.email,\n                            fullName: key,\n                            skills: foundUser.skills,\n                            blacklisted: foundUser.blacklisted\n                        })\n                    });\n                });\n            },\n            getRedirectUrl: function (candidateId) {\n                return \"profile/\" + candidateId;\n            },\n            getKey: function(user) {\n                return user.fullName;\n            },\n            getBlacklistStatusText: function (status) {\n                return status === true ? \"Yes\" : \"No\";\n            },\n            showSkills: function (user) {\n                this.getLinkedInSkills(user.candidateId).then(skills => {\n                    this.$swal(\"Skills of \" + user.fullName, skills.toString(), \"info\")\n                });\n            },\n            showApplications: function (user) {\n                this.getCandidateApplications(user.candidateId).then(applications => {\n                    console.log(applications)\n                    let jobTitles = [];\n\n                    applications.forEach(application => {\n                        jobTitles.push(application.jobPostTitle)\n                    });\n\n                    console.log(jobTitles);\n\n                    this.$swal(\"Applications of \" + user.fullName, jobTitles.toString(), \"info\");\n                })\n            },\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import \"../../styles/abstracts/typography\";\n\n    .talent-scout {\n        @include set_font_montserrat();\n    }\n\n    #search {\n        width: 500px;\n        margin-right: 1rem;\n    }\n\n    .prelude {\n        text-align: center;\n        margin-top: 2rem;\n\n        h1 {\n            font-size: 50px;\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    .form-group {\n        margin-left: 15vw;\n    }\n\n    .table-hover {\n        margin-bottom: 0;\n    }\n\n    .table {\n        .btn {\n            color: black;\n            background-color: darken(#e9ecef, 5%);\n        }\n    }\n\n    .results-table {\n        margin-top: 10vh;\n    }\n\n    .search {\n        margin-top: 5vh;\n    }\n</style>\n"],"sourceRoot":"src/components/HR-Admin"}]}
{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/New-Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/New-Post.vue","mtime":1563391959875},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Navbar from \"../Nav.vue\";\nimport ServicesMixin from \"../mixins/services-mixin\";\nimport CommonsMixin from \"../mixins/commons-mixin\";\nexport default {\n  name: \"New-Post\",\n  mixins: [ServicesMixin, CommonsMixin],\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      title: \"\",\n      imageSource: \"\",\n      description: \"\",\n      expireDate: \"\",\n      requirements: Array(1)\n    };\n  },\n  methods: {\n    submitJobPost: function submitJobPost() {\n      var _this = this;\n\n      var success = true;\n\n      if (this.isFormReadyToSubmit()) {\n        var expirationDateFormatted = this.getDateFormatted(this.expireDate);\n        var today = this.getCurrentDate();\n        var urlifiedTitle = this.urlifyString(this.title);\n        var urlifiedDescription = this.urlifyString(this.description);\n        this.urlifyRequirements();\n\n        try {\n          this.saveJobPost(urlifiedTitle, this.imageSource, urlifiedDescription, today, expirationDateFormatted).then(function (response) {\n            console.log(response.data);\n\n            _this.requirements.forEach(function (requirement) {\n              try {\n                _this.saveRequirementForJobPost(response.data, requirement);\n              } catch (e) {\n                console.error(e);\n                success = false;\n              }\n            });\n          });\n        } catch (e) {\n          console.error(e);\n          success = false;\n        }\n      } else {\n        this.showEmptyFieldsAlert();\n      }\n\n      if (success) {\n        this.showAuthorizedAlert();\n      } else {\n        this.showUnauthorizedError();\n      }\n    },\n    getDateFormatted: function getDateFormatted(date) {\n      // @Param: Date in YYYY-MM-DD format and returns in DD-MM-YYYY format\n      if (typeof date !== \"string\") date = date.toString();\n      var day = date.split(\"-\")[2];\n      var month = date.split(\"-\")[1];\n      var year = date.split(\"-\")[0];\n      return day + \"/\" + month + \"/\" + year;\n    },\n    getCurrentDate: function getCurrentDate() {\n      var d = new Date();\n      var day = d.getDay().toString();\n      var month = d.getMonth().toString();\n      var year = d.getFullYear().toString();\n\n      if (parseInt(day) < 10) {\n        day = \"0\" + day;\n      }\n\n      if (parseInt(month) < 10) {\n        month = \"0\" + month;\n      }\n\n      return day + '/' + month + '/' + year;\n    },\n    isFormReadyToSubmit: function isFormReadyToSubmit() {\n      return this.areAllFieldsFilled() && this.isValidURL(this.imageSource);\n    },\n    showAuthorizedAlert: function showAuthorizedAlert() {\n      this.$swal('Saved', 'Job post is successfully saved', 'success');\n    },\n    showEmptyFieldsAlert: function showEmptyFieldsAlert() {\n      this.$swal('Error', 'Please fill the fields before you submit,' + ' all fields must be filled with appropriate input', 'error');\n    },\n    showUnauthorizedError: function showUnauthorizedError() {\n      this.$swal('Error', 'An error occurred', 'error');\n    },\n    areAllFieldsFilled: function areAllFieldsFilled() {\n      for (var i = 0; i < this.requirements.length; i++) {\n        if (!this.notEmptyString(this.requirements[i])) // is empty\n          return false;\n      }\n\n      return this.notEmptyString(this.title) && this.notEmptyString(this.description) && this.notEmptyString(this.expireDate.toString());\n    },\n    notEmptyString: function notEmptyString(str) {\n      return !(str.length === 0 || !str.trim());\n    },\n    isValidURL: function isValidURL(url) {\n      var a = document.createElement('a');\n      a.href = url;\n      return a.host && a.host != window.location.host;\n    },\n    addRequirement: function addRequirement() {\n      this.requirements.push(\"\");\n    },\n    urlifyRequirements: function urlifyRequirements() {\n      for (var i = 0; i < this.requirements.length; i++) {\n        this.requirements[i] = this.urlifyString(this.requirements[i]);\n      }\n    }\n  }\n};",{"version":3,"sources":["New-Post.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"new-post\">\n    <Navbar></Navbar>\n    <br><br>\n    <div class=\"container title\">\n        <h1>Create a job post</h1>\n        <hr>\n        <br>\n    </div>\n    <form class=\"container\">\n        <div class=\"form-group\">\n            <label for=\"title\">Job Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Enter title\" v-model=\"title\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"image-source\">Post header image</label>\n            <input type=\"url\" class=\"form-control\"\n                   id=\"image-source\" aria-describedby=\"image-help\"\n                   placeholder=\"Enter url\" v-model=\"imageSource\">\n            <small id=\"image-help\" class=\"form-text text-muted\">Image to display in job post</small>\n        </div>\n\n        <label for=\"job-description\">Job Description</label>\n        <textarea class=\"form-control\" id=\"job-description\" rows=\"3\" v-model=\"description\"></textarea>\n        <div class=\"requirements\">\n            <br>\n            <h1 class=\"requirements__title\">Job Requirements</h1>\n            <hr>\n            <br>\n            <p>Enter the desired skills for the job, if you want more requirements,\n                feel free to click add requirements button</p>\n            <div class=\"form-group\" v-for=\"(requirement, i) in requirements\">\n                <br>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter requirement\" v-model=\"requirements[i]\" required>\n            </div>\n        </div>\n    </form>\n    <div>\n    <div class=\"bottom-container container\">\n        <div class=\"expire-date\">\n            <button class=\"btn btn-danger add-button\" v-on:click=\"addRequirement()\">Add requirement</button>\n            <label for=\"expire-date\">Expire Date</label>\n            <input type=\"date\" name=\"expiredate\" id=\"expire-date\" v-model=\"expireDate\">\n            <button class=\"btn btn-primary submit-button\" v-on:click=\"submitJobPost()\">Submit</button>\n        </div>\n    </div>\n\n    </div>\n</div>\n</template>\n\n<script>\n    import Navbar from \"../Nav.vue\";\n    import ServicesMixin from \"../mixins/services-mixin\";\n    import CommonsMixin from \"../mixins/commons-mixin\";\n\n    export default {\n        name: \"New-Post\",\n        mixins: [ServicesMixin, CommonsMixin],\n        components: { Navbar },\n        data() {\n            return {\n                title: \"\",\n                imageSource: \"\",\n                description: \"\",\n                expireDate: \"\",\n                requirements: Array(1)\n            }\n        },\n        methods: {\n            submitJobPost: function () {\n                let success = true;\n\n                if (this.isFormReadyToSubmit()) {\n                    const expirationDateFormatted = this.getDateFormatted(this.expireDate);\n                    const today = this.getCurrentDate();\n                    const urlifiedTitle = this.urlifyString(this.title);\n                    let urlifiedDescription = this.urlifyString(this.description);\n\n                    this.urlifyRequirements();\n\n                    try {\n                        this.saveJobPost(urlifiedTitle, this.imageSource,\n                            urlifiedDescription, today, expirationDateFormatted)\n                            .then(response => {\n                                console.log(response.data);\n                                this.requirements.forEach(requirement => {\n                                    try {\n                                        this.saveRequirementForJobPost(response.data, requirement);\n                                    } catch (e) {\n                                        console.error(e);\n                                        success = false;\n                                    }\n                                });\n\n                            })\n                    } catch (e) {\n                        console.error(e);\n                        success = false;\n                    }\n                } else {\n                    this.showEmptyFieldsAlert();\n                }\n\n                if (success) {\n                    this.showAuthorizedAlert()\n                } else {\n                    this.showUnauthorizedError()\n                }\n            },\n            getDateFormatted: function (date) {  // @Param: Date in YYYY-MM-DD format and returns in DD-MM-YYYY format\n                if (typeof date !== \"string\")\n                    date = date.toString();\n\n                const day = date.split(\"-\")[2];\n                const month = date.split(\"-\")[1];\n                const year = date.split(\"-\")[0];\n\n                return day + \"/\" + month + \"/\" + year;\n            },\n            getCurrentDate: function () {\n                const d = new Date();\n                let day = d.getDay().toString();\n                let month = d.getMonth().toString();\n                let year = d.getFullYear().toString();\n\n                if (parseInt(day) < 10) {\n                    day = \"0\" + day;\n                }\n\n                if (parseInt(month) < 10) {\n                    month = \"0\" + month;\n                }\n\n                return day + '/' + month + '/' + year;\n            },\n            isFormReadyToSubmit: function () {\n                return this.areAllFieldsFilled() && this.isValidURL(this.imageSource);\n            },\n            showAuthorizedAlert: function () {\n                this.$swal('Saved', 'Job post is successfully saved', 'success');\n            },\n            showEmptyFieldsAlert: function () {\n                this.$swal('Error', 'Please fill the fields before you submit,' +\n                    ' all fields must be filled with appropriate input' , 'error');\n            },\n            showUnauthorizedError: function () {\n                this.$swal('Error', 'An error occurred' , 'error');\n            },\n            areAllFieldsFilled: function () {\n                for (let i = 0; i < this.requirements.length; i++) {\n                    if (!this.notEmptyString(this.requirements[i])) // is empty\n                        return false;\n                }\n\n                return this.notEmptyString(this.title) && this.notEmptyString(this.description)\n                        && this.notEmptyString(this.expireDate.toString());\n            },\n            notEmptyString: function (str) {\n                return !(str.length === 0 || !str.trim());\n            },\n            isValidURL: function (url) {\n                let a = document.createElement('a');\n                a.href = url;\n                return (a.host && a.host != window.location.host);\n            },\n            addRequirement: function () {\n                this.requirements.push(\"\");\n            },\n            urlifyRequirements: function () {\n                for (let i = 0; i < this.requirements.length; i++) {\n                    this.requirements[i] = this.urlifyString(this.requirements[i]);\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import '../../styles/abstracts/colors';\n    @import '../../styles/abstracts/typography';\n\n    * {\n        @include set_font_opensans\n    }\n\n    form {\n        position: relative;\n    }\n\n    .title {\n        text-align: center;\n\n        h1 {\n            font-weight: 300;\n            font-size: 3rem;\n        }\n    }\n\n    [type=\"date\"] {\n        background:#fff url(https://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/calendar_2.png)  97% 50% no-repeat ;\n    }\n\n    [type=\"date\"]::-webkit-inner-spin-button {\n        display: none;\n    }\n\n    [type=\"date\"]::-webkit-calendar-picker-indicator {\n        opacity: 0;\n    }\n\n    .expire-date {\n        float: right;\n        margin-bottom: 1rem;\n    }\n\n    #expire-date {\n        margin-right: 20px;\n    }\n\n    .btn-primary {\n        background-color: $color-primary-1;\n        border: 0;\n\n        &:hover {\n            background-color: darken($color-primary-1, 10%);\n        }\n    }\n\n    .requirements__title {\n        margin-top: 1rem;\n        text-align: center;\n        font-weight: 300;\n        font-size: 2.5rem;\n    }\n\n    .submit-button {\n        margin-bottom: 5px;\n        padding: 10px;\n    }\n\n    label {\n        display: block;\n    }\n\n    .add-button {\n        margin-top: 0.5rem;\n        margin-bottom: 3rem;\n        margin-left: 6rem;\n    }\n\n    input {\n        border: 1px solid #c4c4c4;\n        border-radius: 5px;\n        background-color: #fff;\n        padding: 3px 5px;\n        box-shadow: inset 0 3px 6px rgba(0,0,0,0.1);\n        width: 190px;\n    }\n\n    form input[data-v-098b51e0] {      // Override bootstrap width\n        width: 77vw;\n    }\n</style>\n"],"sourceRoot":"src/components/HR-Admin"}]}
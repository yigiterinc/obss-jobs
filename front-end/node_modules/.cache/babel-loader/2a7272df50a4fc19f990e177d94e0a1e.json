{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/Applications.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/HR-Admin/Applications.vue","mtime":1564056148887},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Navbar from \"../Nav\";\nimport Multiselect from 'vue-multiselect';\nimport JQuery from 'jquery';\nvar $ = JQuery;\nimport ServicesMixin from \"../mixins/services-mixin\";\nimport CommonsMixin from \"../mixins/commons-mixin\";\nexport default {\n  name: \"Applications\",\n  mixins: [ServicesMixin, CommonsMixin],\n  components: {\n    Navbar: Navbar,\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      statusFilter: null,\n      searchedWord: '',\n      jobRequirements: [],\n      applications: [],\n      filteredByStatus: false,\n      applicationStatuses: ['Awaiting', 'Under review', 'Interview', 'Job Offer', 'Accepted'],\n      tableData: {\n        columns: [{\n          label: 'Name',\n          field: 'name'\n        }, {\n          label: 'Date',\n          field: 'date'\n        }, {\n          label: 'Compatibility',\n          field: 'compatibility'\n        }, {\n          label: 'Status',\n          field: 'status'\n        }, {\n          label: 'Proceed Application Status',\n          field: 'changeStatus'\n        }, {\n          label: 'Decline application',\n          field: 'declineApplication'\n        }],\n        rows: []\n      }\n    };\n  },\n  methods: {\n    getJobId: function getJobId() {\n      var url = window.location.pathname; // return the first url param\n\n      return url.split(\"/\")[2];\n    },\n    getProfileUrl: function getProfileUrl(id) {\n      return '/profile/' + id;\n    },\n    getApplications: function getApplications() {\n      var _this = this;\n\n      var jobId = this.getJobId();\n      this.getApplicationsForJobPost(jobId).then(function (response) {\n        _this.applications = response;\n\n        _this.fillTable(response);\n      });\n    },\n    fillTable: function fillTable(applications) {\n      var _this2 = this;\n\n      var statusButtonId = 0;\n      this.tableData.rows = [];\n      applications.forEach(function (application) {\n        _this2.tableData.rows.push({\n          name: application.candidateLinkedIn.fullName,\n          candidateId: application.candidateLinkedIn.id,\n          date: _this2.parseDateFromDateObject(application.applicationDate),\n          compatibility: _this2.calculateJobCompatibility(application.candidateLinkedIn.linkedInSkillSet),\n          status: application.applicationStatus,\n          candidateSkillSet: application.candidateLinkedIn.linkedInSkillSet\n        });\n\n        statusButtonId++;\n      });\n    },\n    calculateJobCompatibility: function calculateJobCompatibility(skillSet) {\n      var score = 0;\n      this.jobRequirements.forEach(function (requirement) {\n        var wordsInRequirement = requirement.split(\" \");\n        wordsInRequirement.forEach(function (word) {\n          skillSet.forEach(function (skillObject) {\n            if (skillObject.skill.toString().toLowerCase() === word.toLowerCase()) {\n              score++;\n            }\n          });\n        });\n      });\n      var numberOfRequirements = this.jobRequirements.length;\n      return Math.floor(score / numberOfRequirements * 100) + \"%\";\n    },\n    proceedApplicationStatus: function proceedApplicationStatus(index) {\n      var _this3 = this;\n\n      var application = this.applications[index];\n      var applicationId = application.id;\n      var applicationStatus = application.applicationStatus;\n      var nextApplicationStatus = \"\";\n\n      for (var i = 0; i < this.applicationStatuses.length - 1; i++) {\n        if (this.applicationStatuses[i] === applicationStatus) {\n          nextApplicationStatus = this.applicationStatuses[i + 1];\n        }\n      }\n\n      var nextApplicationStatusUrlified = this.urlifyString(nextApplicationStatus);\n      this.updateApplicationStatus(applicationId, nextApplicationStatusUrlified).then(function () {\n        _this3.getApplications();\n      }).catch(function (error) {\n        console.error(error);\n\n        _this3.showUpdateFailureAlert();\n      });\n      this.showSuccessfulUpdateAlert();\n    },\n    showSuccessfulUpdateAlert: function showSuccessfulUpdateAlert() {\n      this.$swal('Success', 'Application status is succesfully updated', 'success');\n    },\n    showUpdateFailureAlert: function showUpdateFailureAlert() {\n      this.$swal('Error', 'An error occurred while updating the application status', 'error');\n    },\n    rejectApplication: function rejectApplication(index) {\n      var _this4 = this;\n\n      var application = this.applications[index];\n      var applicationId = application.id;\n      this.updateApplicationStatus(applicationId, \"Declined\").then(function () {\n        _this4.getApplications();\n      });\n    },\n    filterByStatus: function filterByStatus() {\n      if (this.filteredByStatus) {\n        return this.resetFilter();\n      } else {\n        var filter = this.statusFilter.toUpperCase();\n        var table = document.getElementsByClassName(\"table\")[0];\n        var tr = table.getElementsByTagName(\"tr\");\n\n        for (var i = 0; i < tr.length; i++) {\n          var td = tr[i].getElementsByTagName(\"td\")[3];\n\n          if (td) {\n            var txtValue = td.textContent || td.innerText;\n\n            if (txtValue.toUpperCase().indexOf(filter) > -1) {\n              tr[i].style.display = \"\";\n            } else {\n              tr[i].style.display = \"none\";\n            }\n          }\n        }\n\n        this.filteredByStatus = true;\n      }\n    },\n    resetFilter: function resetFilter() {\n      var table = document.getElementsByClassName(\"table\")[0];\n      var tr = table.getElementsByTagName(\"tr\");\n\n      for (var i = 0; i < tr.length; i++) {\n        var td = tr[i].getElementsByTagName(\"td\")[3];\n\n        if (td) {\n          tr[i].style.display = \"\"; // make all tds visible\n        }\n      }\n\n      this.filteredByStatus = false;\n    },\n    sortByColumn: function sortByColumn(columnNumber) {\n      var first,\n          second,\n          numberOfSwitches,\n          i = 0;\n      var table = document.getElementsByClassName(\"table\")[0];\n      var switching = true;\n      var shouldSwitch = false;\n      var dir = \"asc\";\n\n      while (switching) {\n        switching = false;\n        var rows = table.getElementsByTagName(\"tr\");\n\n        for (i = 1; i < rows.length - 1; i++) {\n          // Start by saying there should be no switching:\n          shouldSwitch = false;\n          first = rows[i].getElementsByTagName(\"TD\")[columnNumber];\n          second = rows[i + 1].getElementsByTagName(\"TD\")[columnNumber];\n\n          if (dir === \"asc\") {\n            if (first.innerHTML.toLowerCase() > second.innerHTML.toLowerCase()) {\n              // If so, mark as a switch and break the loop:\n              shouldSwitch = true;\n              break;\n            }\n          } else if (dir === \"desc\") {\n            if (first.innerHTML.toLowerCase() < second.innerHTML.toLowerCase()) {\n              shouldSwitch = true;\n              break;\n            }\n          }\n        }\n\n        if (shouldSwitch) {\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n          numberOfSwitches++;\n        } else {\n          if (numberOfSwitches === 0 && dir === \"asc\") {\n            dir = \"desc\";\n            switching = true;\n          }\n        }\n      }\n    },\n    searchTable: function searchTable() {\n      $(document).ready(function () {\n        $(\"#search\").on(\"keyup\", function () {\n          var value = $(this).val().toLowerCase();\n          $(\"#table tr\").filter(function () {\n            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);\n          });\n        });\n      });\n    },\n    fetchRequirements: function fetchRequirements(jobId) {\n      var _this5 = this;\n\n      this.getJobRequirements(jobId).then(function (jobRequirements) {\n        jobRequirements.forEach(function (jobRequirementsDto) {\n          _this5.jobRequirements.push(jobRequirementsDto.requirement);\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$store.getters.hrExpertAuthenticated) {\n      this.$router.push(\"/\");\n    }\n\n    this.fetchRequirements(this.getJobId());\n    this.getApplications();\n  }\n};",{"version":3,"sources":["Applications.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"applications\">\n        <Navbar></Navbar>\n        <div class=\"container\">\n            <div class=\"description\">\n                <h1 class=\"title\">Applications</h1>\n                <p class=\"information\">You can search for a skill by using the search bar. Use the dropdown to filter by application status\n                    and click the arrow button to sort by candidate compatibility. Proceed status button takes the application to\n                    the next status (Awaiting -> Under review -> Interview -> Job Offer -> Accepted) </p>\n                <label for=\"search\">Search for a word</label>\n            </div>\n\n            <form class=\"form-inline search-form\">\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control search\" id=\"search\"\n                           placeholder=\"Search\" v-model=\"searchedWord\"\n                           @input=\"searchTable()\" required>\n                </div>\n                <multiselect v-model=\"statusFilter\" :options=\"applicationStatuses\" class=\"multiselect\" @input=\"filterByStatus()\"></multiselect>\n            </form>\n            <div class=\"table-responsive\">\n                <div class=\"card\">\n                    <table class=\"table table-hover\">\n                        <thead class=\"thead-light\">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\" v-for=\"(col, i) in tableData.columns\" @click=\"sortByColumn(i)\">\n                                {{col.label}}\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody id=\"table\">\n                        <tr v-for=\"(row, i) in tableData.rows\">\n                            <th>{{i + 1}}</th>\n                            <td>\n                                <router-link class=\"candidate-name\"\n                                             :to=\"getProfileUrl(row.candidateId)\">{{row.name}}\n                                </router-link>\n                            </td>\n                            <td>{{row.date}}</td>\n                            <td>{{row.compatibility}}</td>\n                            <td>{{row.status}}</td>\n                            <td>\n                                <button class=\"btn btn-success proceed-button\"\n                                        @click=\"proceedApplicationStatus(i)\">\n                                    Proceed Status\n                                </button>\n                            </td>\n                            <td>\n                                <button class=\"btn btn-danger reject-button\"\n                                        @click=\"rejectApplication(i)\">\n                                    Decline Application\n                                </button>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import Navbar from \"../Nav\"\n    import Multiselect from 'vue-multiselect'\n\n    import JQuery from 'jquery'\n    let $ = JQuery;\n\n    import ServicesMixin from \"../mixins/services-mixin\";\n    import CommonsMixin from \"../mixins/commons-mixin\";\n\n    export default {\n        name: \"Applications\",\n        mixins: [ServicesMixin, CommonsMixin],\n        components: {\n            Navbar,\n            Multiselect,\n        },\n        data () {\n            return {\n                statusFilter: null,\n                searchedWord: '',\n                jobRequirements: [],\n                applications: [],\n                filteredByStatus: false,\n                applicationStatuses: ['Awaiting', 'Under review', 'Interview', 'Job Offer', 'Accepted'],\n                tableData: {\n                    columns: [\n                        {\n                            label: 'Name',\n                            field: 'name',\n                        },\n                        {\n                            label: 'Date',\n                            field: 'date',\n                        },\n                        {\n                            label: 'Compatibility',\n                            field: 'compatibility',\n                        },\n                        {\n                            label: 'Status',\n                            field: 'status',\n                        },\n                        {\n                            label: 'Proceed Application Status',\n                            field: 'changeStatus',\n                        },\n                        {\n                            label: 'Decline application',\n                            field: 'declineApplication'\n                        }\n                    ],\n                    rows: []\n                }\n            }\n        },\n        methods: {\n            getJobId: function() {\n                const url = window.location.pathname;\n                // return the first url param\n                return url.split(\"/\")[2];\n            },\n            getProfileUrl: function (id) {\n                return '/profile/' + id;\n            },\n            getApplications() {\n                const jobId = this.getJobId();\n                this.getApplicationsForJobPost(jobId).then(response => {\n                    this.applications = response;\n                    this.fillTable(response);\n                })\n            },\n            fillTable(applications) {\n                let statusButtonId = 0;\n\n                this.tableData.rows = [];\n\n                applications.forEach(application => {\n                    this.tableData.rows.push({\n                        name: application.candidateLinkedIn.fullName,\n                        candidateId: application.candidateLinkedIn.id,\n                        date: this.parseDateFromDateObject(application.applicationDate),\n                        compatibility: this.calculateJobCompatibility(application.candidateLinkedIn.linkedInSkillSet),\n                        status: application.applicationStatus,\n                        candidateSkillSet: application.candidateLinkedIn.linkedInSkillSet\n                    });\n\n                    statusButtonId++;\n                });\n            },\n            calculateJobCompatibility (skillSet) {\n                let score = 0;\n\n                this.jobRequirements.forEach(requirement => {\n                    const wordsInRequirement = requirement.split(\" \");\n                    wordsInRequirement.forEach(word => {\n                        skillSet.forEach(skillObject => {\n                            if (skillObject.skill.toString().toLowerCase() === word.toLowerCase()) {\n                                score++;\n                            }\n                        })\n                    });\n                });\n\n                const numberOfRequirements = this.jobRequirements.length;\n                return Math.floor((score / numberOfRequirements) * 100) + \"%\";\n            },\n            proceedApplicationStatus (index) {\n                const application = this.applications[index];\n                const applicationId = application.id;\n                const applicationStatus = application.applicationStatus;\n\n                let nextApplicationStatus = \"\";\n\n                for (let i = 0; i < this.applicationStatuses.length - 1; i++) {\n                    if (this.applicationStatuses[i] === applicationStatus) {\n                        nextApplicationStatus = this.applicationStatuses[i + 1];\n                    }\n                }\n\n                const nextApplicationStatusUrlified = this.urlifyString(nextApplicationStatus);\n\n                this.updateApplicationStatus(applicationId, nextApplicationStatusUrlified)\n                    .then(() => {\n                        this.getApplications();\n                    }).catch(error => {\n                        console.error(error);\n                        this.showUpdateFailureAlert();\n                });\n\n                this.showSuccessfulUpdateAlert();\n            },\n            showSuccessfulUpdateAlert: function () {\n                this.$swal('Success', 'Application status is succesfully updated' , 'success');\n            },\n            showUpdateFailureAlert: function () {\n                this.$swal('Error', 'An error occurred while updating the application status' , 'error');\n            },\n            rejectApplication: function (index) {\n                const application = this.applications[index];\n                const applicationId = application.id;\n\n                this.updateApplicationStatus(applicationId, \"Declined\")\n                    .then(() => {\n                        this.getApplications()\n                    })\n            },\n            filterByStatus() {\n                if (this.filteredByStatus) {\n                    return this.resetFilter();\n                } else {\n                    let filter = this.statusFilter.toUpperCase();\n\n                    let table = document.getElementsByClassName(\"table\")[0];\n                    let tr = table.getElementsByTagName(\"tr\");\n\n                    for (let i = 0; i < tr.length; i++) {\n                        let td = tr[i].getElementsByTagName(\"td\")[3];\n                        if (td) {\n                            let txtValue = td.textContent || td.innerText;\n\n                            if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                                tr[i].style.display = \"\";\n                            } else {\n                                tr[i].style.display = \"none\";\n                            }\n                        }\n                    }\n\n                    this.filteredByStatus = true;\n                }\n            },\n            resetFilter () {\n                let table = document.getElementsByClassName(\"table\")[0];\n                let tr = table.getElementsByTagName(\"tr\");\n\n                for (let i = 0; i < tr.length; i++) {\n                    let td = tr[i].getElementsByTagName(\"td\")[3];\n                    if (td) {\n                        tr[i].style.display = \"\";   // make all tds visible\n                    }\n                }\n\n                this.filteredByStatus = false;\n            },\n            sortByColumn (columnNumber) {\n                let first, second, numberOfSwitches, i = 0;\n\n                let table = document.getElementsByClassName(\"table\")[0];\n                let switching = true;\n                let shouldSwitch = false;\n                let dir = \"asc\";\n\n                while (switching) {\n                    switching = false;\n                    var rows = table.getElementsByTagName(\"tr\");\n\n                    for (i = 1; i < (rows.length - 1); i++) {\n                        // Start by saying there should be no switching:\n                        shouldSwitch = false;\n                        first = rows[i].getElementsByTagName(\"TD\")[columnNumber];\n                        second = rows[i + 1].getElementsByTagName(\"TD\")[columnNumber];\n                        if (dir === \"asc\") {\n                            if (first.innerHTML.toLowerCase() > second.innerHTML.toLowerCase()) {\n                                // If so, mark as a switch and break the loop:\n                                shouldSwitch = true;\n                                break;\n                            }\n                        } else if (dir === \"desc\") {\n                            if (first.innerHTML.toLowerCase() < second.innerHTML.toLowerCase()) {\n                                shouldSwitch = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (shouldSwitch) {\n                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n                        switching = true;\n                        numberOfSwitches ++;\n                    } else {\n                        if (numberOfSwitches === 0 && dir === \"asc\") {\n                            dir = \"desc\";\n                            switching = true;\n                        }\n                    }\n                }\n            },\n            searchTable() {\n                $(document).ready(() => {\n                    $(\"#search\").on(\"keyup\", function() {\n                        let value = $(this).val().toLowerCase();\n                        $(\"#table tr\").filter(function() {\n                            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n                        });\n                    });\n                });\n            },\n            fetchRequirements(jobId) {\n                this.getJobRequirements(jobId).then(jobRequirements => {\n                    jobRequirements.forEach(jobRequirementsDto => {\n                        this.jobRequirements.push(jobRequirementsDto.requirement)\n                    })\n                });\n            }\n        },\n        mounted () {\n            if (!this.$store.getters.hrExpertAuthenticated) {\n                this.$router.push(\"/\");\n            }\n\n            this.fetchRequirements(this.getJobId());\n            this.getApplications();\n        }\n    }\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style scoped lang=\"scss\">\n    @import \"../../styles/abstracts/typography\";\n\n    * {\n        @include set_font_opensans();\n\n        a, button {\n            text-decoration: none;\n            color: $slightly-blue-white\n        }\n    }\n\n    .applications {\n        height: 100vh;\n    }\n\n    .title {\n        margin-top: 2rem;\n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    .search {\n        width: 40vw;\n    }\n\n    .multiselect {\n        margin-left: 10px;\n        width: 12vw;\n    }\n\n    .search-form {\n        margin-bottom: 2rem;\n    }\n\n    .information {\n        margin-bottom: 3rem;\n        font-size: 17px;\n    }\n\n    .proceed-button {\n        margin-left: 20px;\n    }\n\n    table {\n        margin-bottom: 0;\n\n        .candidate-name {\n            color: $slightly-blue-black;\n\n            &:hover {\n                color: #0079B3;\n            }\n        }\n\n        td {\n            color: $slightly-blue-black;\n        }\n    }\n</style>\n"],"sourceRoot":"src/components/HR-Admin"}]}
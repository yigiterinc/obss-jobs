{"remainingRequest":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/Applications.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/src/components/Applications.vue","mtime":1562926074219},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erinc/Documents/WebWorkspace/yigit-erinc/obss-jobs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Navbar from \"./Nav\";\nimport Multiselect from 'vue-multiselect';\nimport { mdbDatatable } from 'mdbvue';\nimport ServicesMixin from \"./mixins/services-mixin\";\nimport CommonsMixin from \"./mixins/commons-mixin\";\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbvue/build/css/mdb.css';\nexport default {\n  name: \"Applications\",\n  mixins: [ServicesMixin, CommonsMixin],\n  components: {\n    Navbar: Navbar,\n    Multiselect: Multiselect,\n    mdbDatatable: mdbDatatable\n  },\n  data: function data() {\n    return {\n      statusFilter: null,\n      searchedWord: '',\n      jobRequirements: [],\n      applications: [],\n      options: ['Awaiting', 'Under review', 'Interview', 'Job Offer', 'Accepted'],\n      tableData: {\n        columns: [{\n          label: 'Name',\n          field: 'name',\n          sort: 'asc'\n        }, {\n          label: 'Date',\n          field: 'date',\n          sort: 'asc'\n        }, {\n          label: 'Compatibility',\n          field: 'compatibility',\n          sort: 'asc'\n        }, {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc'\n        }, {\n          label: 'Proceed Application Status',\n          field: 'changeStatus'\n        }],\n        rows: []\n      }\n    };\n  },\n  methods: {\n    getJobId: function getJobId() {\n      var url = window.location.pathname; // return the first url param\n\n      return url.split(\"/\")[2];\n    },\n    getApplications: function getApplications() {\n      var _this = this;\n\n      var jobId = this.getJobId();\n      this.getApplicationsForJobPost(jobId).then(function (response) {\n        _this.applications = response;\n\n        _this.fillTable(response);\n      });\n    },\n    fillTable: function fillTable(applications) {\n      var _this2 = this;\n\n      var statusButtonId = 0;\n      applications.forEach(function (application) {\n        _this2.tableData.rows.push({\n          name: application.candidate.fullName,\n          date: _this2.parseDateFromDateObject(application.applicationDate),\n          compatibility: _this2.calculateJobCompatibility(application.candidate.linkedIn.linkedInSkillSet),\n          status: application.applicationStatus,\n          changeStatus: '<button type=\"button\" class=\"btn-indigo btn-sm m-0 status-button\"' + ' style=\"margin-left: 1rem\">' + 'Proceed Status</button>',\n          candidateSkillSet: application.candidate.linkedIn.linkedInSkillSet\n        });\n\n        statusButtonId++;\n      });\n    },\n    calculateJobCompatibility: function calculateJobCompatibility(skillSet) {\n      var score = 0;\n      this.jobRequirements.forEach(function (requirement) {\n        var wordsInRequirement = requirement.split(\" \");\n        wordsInRequirement.forEach(function (word) {\n          skillSet.forEach(function (skillObject) {\n            if (skillObject.skill.toString().toLowerCase() === word.toLowerCase()) {\n              score++;\n            }\n          });\n        });\n      });\n      var numberOfRequirements = this.jobRequirements.length;\n      return Math.floor(score / numberOfRequirements * 100) + \"%\";\n    },\n    addEventListenersToButtons: function addEventListenersToButtons() {\n      var proceedButtonsCollection = document.getElementsByClassName(\"status-button\");\n      console.log(proceedButtonsCollection);\n\n      for (var i = 0; i < proceedButtonsCollection.length; i++) {\n        console.log(i, proceedButtonsCollection.item(i));\n      }\n      /*\n                      proceedButtons.forEach(button => {\n                          button.addEventListener(\"click\", this.proceedStatus);\n                      });\n      */\n\n    },\n    proceedStatus: function proceedStatus() {\n      console.log('hi');\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.getJobRequirements(this.getJobId()).then(function (jobRequirements) {\n      jobRequirements.forEach(function (jobRequirementsDto) {\n        _this3.jobRequirements.push(jobRequirementsDto.requirement);\n      });\n    });\n    this.getApplications();\n    this.addEventListenersToButtons();\n  }\n};",{"version":3,"sources":["Applications.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <Navbar :is-candidate=\"false\"></Navbar>\n    <div class=\"container\">\n        <h1 class=\"title\">Applications</h1>\n        <p class=\"information\">You can search for a skill by using the search bar. Use the dropdown to filter by application status\n        and click the arrow button to sort by candidate compatibility. Proceed status button takes the application to\n        the next status (Awaiting -> Under review -> Interview -> Job Offer -> Accepted) </p>\n        <label for=\"search\">Search for a skill</label>\n\n        <form class=\"form-inline search-form\">\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control search\" id=\"search\"\n                       placeholder=\"Search\" v-model=\"searchedWord\" required>\n            </div>\n            <multiselect v-model=\"statusFilter\" :options=\"options\" class=\"multiselect\"></multiselect>\n        </form>\n        <mdb-datatable\n                :data=\"tableData\"\n                :searching=\"false\"\n                :pagination=\"false\"\n                :responsive=\"true\"\n                striped\n                bordered/>\n    </div>\n</div>\n</template>\n\n<script>\n    import Navbar from \"./Nav\"\n    import Multiselect from 'vue-multiselect'\n    import {mdbDatatable} from 'mdbvue';\n\n    import ServicesMixin from \"./mixins/services-mixin\";\n    import CommonsMixin from \"./mixins/commons-mixin\";\n\n    import 'bootstrap-css-only/css/bootstrap.min.css';\n    import 'mdbvue/build/css/mdb.css';\n\n    export default {\n        name: \"Applications\",\n        mixins: [ServicesMixin, CommonsMixin],\n        components: {\n            Navbar,\n            Multiselect,\n            mdbDatatable\n        },\n        data () {\n            return {\n                statusFilter: null,\n                searchedWord: '',\n                jobRequirements: [],\n                applications: [],\n                options: ['Awaiting', 'Under review', 'Interview', 'Job Offer', 'Accepted'],\n                tableData: {\n                    columns: [\n                        {\n                            label: 'Name',\n                            field: 'name',\n                            sort: 'asc',\n                        },\n                        {\n                            label: 'Date',\n                            field: 'date',\n                            sort: 'asc'\n                        },\n                        {\n                            label: 'Compatibility',\n                            field: 'compatibility',\n                            sort: 'asc'\n                        },\n                        {\n                            label: 'Status',\n                            field: 'status',\n                            sort: 'asc'\n                        },\n                        {\n                            label: 'Proceed Application Status',\n                            field: 'changeStatus',\n                        }\n                    ],\n                        rows: []\n                }\n            }\n        },\n        methods: {\n            getJobId: function() {\n                const url = window.location.pathname;\n                // return the first url param\n                return url.split(\"/\")[2];\n            },\n            getApplications() {\n                const jobId = this.getJobId();\n                this.getApplicationsForJobPost(jobId).then(response => {\n                    this.applications = response;\n                    this.fillTable(response);\n                })\n            },\n            fillTable(applications) {\n                let statusButtonId = 0;\n\n                applications.forEach(application => {\n                    this.tableData.rows.push({\n                        name: application.candidate.fullName,\n                        date: this.parseDateFromDateObject(application.applicationDate),\n                        compatibility: this.calculateJobCompatibility(application.candidate.linkedIn.linkedInSkillSet),\n                        status: application.applicationStatus,\n                        changeStatus: '<button type=\"button\" class=\"btn-indigo btn-sm m-0 status-button\"' +\n                            ' style=\"margin-left: 1rem\">' +\n                            'Proceed Status</button>',\n                        candidateSkillSet: application.candidate.linkedIn.linkedInSkillSet\n                    });\n\n                    statusButtonId++;\n                });\n            },\n            calculateJobCompatibility (skillSet) {\n                let score = 0;\n\n                this.jobRequirements.forEach(requirement => {\n                    const wordsInRequirement = requirement.split(\" \");\n                    wordsInRequirement.forEach(word => {\n                        skillSet.forEach(skillObject => {\n                            if (skillObject.skill.toString().toLowerCase() === word.toLowerCase()) {\n                                score++;\n                            }\n                        })\n                    });\n                });\n\n                const numberOfRequirements = this.jobRequirements.length;\n                return Math.floor((score / numberOfRequirements) * 100) + \"%\";\n            },\n            addEventListenersToButtons() {\n                let proceedButtonsCollection = document.getElementsByClassName(\"status-button\");\n\n                console.log(proceedButtonsCollection)\n                for (let i = 0; i < proceedButtonsCollection.length; i++) {\n                    console.log(i, proceedButtonsCollection.item(i));\n                }\n/*\n                proceedButtons.forEach(button => {\n                    button.addEventListener(\"click\", this.proceedStatus);\n                });\n*/\n            },\n            proceedStatus () {\n                console.log('hi')\n            }\n        },\n        mounted() {\n            this.getJobRequirements(this.getJobId()).then(jobRequirements => {\n                jobRequirements.forEach(jobRequirementsDto => {\n                    this.jobRequirements.push(jobRequirementsDto.requirement)\n                })\n            });\n\n            this.getApplications();\n            this.addEventListenersToButtons()\n        }\n    }\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style scoped lang=\"scss\">\n    @import \"../styles/abstracts/typography.scss\";\n\n    * {\n        @include set_font_opensans\n    }\n\n    .title {\n        margin-top: 2rem;\n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    .search {\n        width: 40vw;\n    }\n\n    .multiselect {\n        margin-left: 10px;\n        width: 10vw;\n    }\n\n    table.dataTable thead .sorting:after,\n    table.dataTable thead .sorting:before,\n    table.dataTable thead .sorting_asc:after,\n    table.dataTable thead .sorting_asc:before,\n    table.dataTable thead .sorting_asc_disabled:after,\n    table.dataTable thead .sorting_asc_disabled:before,\n    table.dataTable thead .sorting_desc:after,\n    table.dataTable thead .sorting_desc:before,\n    table.dataTable thead .sorting_desc_disabled:after,\n    table.dataTable thead .sorting_desc_disabled:before {\n        bottom: .5em;\n    }\n\n    tfoot {\n        display: none !important;\n    }\n\n    .search-form {\n        margin-bottom: 2rem;\n    }\n\n    .information {\n        margin-bottom: 3rem;\n        font-size: 17px;\n    }\n</style>\n\n"],"sourceRoot":"src/components"}]}